error: cannot infer an appropriate lifetime
  --> $DIR/dyn-trait-underscore.rs:8:20
   |
LL |     Box::new(items.iter())
   |     ---------------^^^^--- this is `'static`...
   |
note: ...but this borrow...
  --> $DIR/dyn-trait-underscore.rs:8:14
   |
LL |     Box::new(items.iter())
   |              ^^^^^
note: ...can't outlive the anonymous lifetime #1 defined on the function body at 6:1
  --> $DIR/dyn-trait-underscore.rs:6:1
   |
LL | / fn a<T>(items: &[T]) -> Box<dyn Iterator<Item=&T>> {
LL | |     //                      ^^^^^^^^^^^^^^^^^^^^^ bound *here* defaults to `'static`
LL | |     Box::new(items.iter())
LL | | }
   | |_^
help: you can add a bound to the returned `dyn Trait` to make it last less than `'static` and match the anonymous lifetime #1 defined on the function body at 6:1
   |
LL | fn a<T>(items: &[T]) -> Box<dyn Iterator<Item=&T> + '_> {
   |                                                   ^^^^

error: aborting due to previous error

