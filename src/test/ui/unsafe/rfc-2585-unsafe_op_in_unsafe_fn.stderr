error: call to unsafe function is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:18:5
   |
LL |     unsf();
   |     ^^^^^^ call to unsafe function
   |
note: the lint level is defined here
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:2:9
   |
LL | #![deny(unsafe_op_in_unsafe_fn)]
   |         ^^^^^^^^^^^^^^^^^^^^^^
   = note: consult the function's documentation for information on how to avoid undefined behavior

error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:20:5
   |
LL |     *PTR;
   |     ^^^^ dereference of raw pointer
   |
   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error: use of mutable static is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:22:5
   |
LL |     VOID = ();
   |     ^^^^^^^^^ use of mutable static
   |
   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

error: borrow of packed field is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:24:5
   |
LL |     &PACKED.data;
   |     ^^^^^^^^^^^^ borrow of packed field
   |
note: the lint level is defined here
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:4:9
   |
LL | #![deny(safe_packed_borrows)]
   |         ^^^^^^^^^^^^^^^^^^^
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>
   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior

error: call to unsafe function is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:33:5
   |
LL |     unsf();
   |     ^^^^^^ call to unsafe function
   |
note: the lint level is defined here
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:31:8
   |
LL | #[deny(warnings)]
   |        ^^^^^^^^
   = note: `#[deny(unsafe_op_in_unsafe_fn)]` implied by `#[deny(warnings)]`
   = note: consult the function's documentation for information on how to avoid undefined behavior

error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:35:5
   |
LL |     *PTR;
   |     ^^^^ dereference of raw pointer
   |
   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error: use of mutable static is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:37:5
   |
LL |     VOID = ();
   |     ^^^^^^^^^ use of mutable static
   |
   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

error: borrow of packed field is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:39:5
   |
LL |     &PACKED.data;
   |     ^^^^^^^^^^^^ borrow of packed field
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>
   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior

error: unnecessary `unsafe` block
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:55:14
   |
LL |     unsafe { unsafe { unsf() } }
   |     ------   ^^^^^^ unnecessary `unsafe` block
   |     |
   |     because it's nested under this `unsafe` block
   |
note: the lint level is defined here
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:3:9
   |
LL | #![deny(unused_unsafe)]
   |         ^^^^^^^^^^^^^

warning: borrow of packed field is unsafe and requires unsafe block (error E0133)
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:61:5
   |
LL |     &PACKED.data;
   |     ^^^^^^^^^^^^ borrow of packed field
   |
note: the lint level is defined here
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:59:8
   |
LL | #[warn(safe_packed_borrows)]
   |        ^^^^^^^^^^^^^^^^^^^
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>
   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior

error: unnecessary `unsafe` block
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:79:5
   |
LL |     unsafe { unsf() }
   |     ^^^^^^ unnecessary `unsafe` block

error: unnecessary `unsafe` block
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:92:9
   |
LL |         unsafe { unsf() }
   |         ^^^^^^ unnecessary `unsafe` block

error[E0133]: call to unsafe function is unsafe and requires unsafe block
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:98:5
   |
LL |     unsf();
   |     ^^^^^^ call to unsafe function
   |
   = note: consult the function's documentation for information on how to avoid undefined behavior

error[E0133]: call to unsafe function is unsafe and requires unsafe function or block
  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:102:9
   |
LL |         unsf();
   |         ^^^^^^ call to unsafe function
   |
   = note: consult the function's documentation for information on how to avoid undefined behavior

error: aborting due to 13 previous errors; 1 warning emitted

For more information about this error, try `rustc --explain E0133`.
