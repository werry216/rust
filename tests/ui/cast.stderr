error: casting i32 to f32 causes a loss of precision (i32 is 32 bits wide, but f32's mantissa is only 23 bits wide)
 --> $DIR/cast.rs:8:5
  |
8 |     1i32 as f32;
  |     ^^^^^^^^^^^
  |
note: lint level defined here
 --> $DIR/cast.rs:4:8
  |
4 | #[deny(cast_precision_loss, cast_possible_truncation, cast_sign_loss, cast_possible_wrap)]
  |        ^^^^^^^^^^^^^^^^^^^

error: casting i64 to f32 causes a loss of precision (i64 is 64 bits wide, but f32's mantissa is only 23 bits wide)
 --> $DIR/cast.rs:9:5
  |
9 |     1i64 as f32;
  |     ^^^^^^^^^^^

error: casting i64 to f64 causes a loss of precision (i64 is 64 bits wide, but f64's mantissa is only 52 bits wide)
  --> $DIR/cast.rs:10:5
   |
10 |     1i64 as f64;
   |     ^^^^^^^^^^^

error: casting u32 to f32 causes a loss of precision (u32 is 32 bits wide, but f32's mantissa is only 23 bits wide)
  --> $DIR/cast.rs:11:5
   |
11 |     1u32 as f32;
   |     ^^^^^^^^^^^

error: casting u64 to f32 causes a loss of precision (u64 is 64 bits wide, but f32's mantissa is only 23 bits wide)
  --> $DIR/cast.rs:12:5
   |
12 |     1u64 as f32;
   |     ^^^^^^^^^^^

error: casting u64 to f64 causes a loss of precision (u64 is 64 bits wide, but f64's mantissa is only 52 bits wide)
  --> $DIR/cast.rs:13:5
   |
13 |     1u64 as f64;
   |     ^^^^^^^^^^^

error: casting f32 to i32 may truncate the value
  --> $DIR/cast.rs:18:5
   |
18 |     1f32 as i32;
   |     ^^^^^^^^^^^
   |
note: lint level defined here
  --> $DIR/cast.rs:4:29
   |
4  | #[deny(cast_precision_loss, cast_possible_truncation, cast_sign_loss, cast_possible_wrap)]
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^

error: casting f32 to u32 may truncate the value
  --> $DIR/cast.rs:19:5
   |
19 |     1f32 as u32;
   |     ^^^^^^^^^^^

error: casting f32 to u32 may lose the sign of the value
  --> $DIR/cast.rs:19:5
   |
19 |     1f32 as u32;
   |     ^^^^^^^^^^^
   |
note: lint level defined here
  --> $DIR/cast.rs:4:55
   |
4  | #[deny(cast_precision_loss, cast_possible_truncation, cast_sign_loss, cast_possible_wrap)]
   |                                                       ^^^^^^^^^^^^^^

error: casting f64 to f32 may truncate the value
  --> $DIR/cast.rs:21:5
   |
21 |     1f64 as f32;
   |     ^^^^^^^^^^^

error: casting i32 to i8 may truncate the value
  --> $DIR/cast.rs:22:5
   |
22 |     1i32 as i8;
   |     ^^^^^^^^^^

error: casting i32 to u8 may lose the sign of the value
  --> $DIR/cast.rs:23:5
   |
23 |     1i32 as u8;
   |     ^^^^^^^^^^

error: casting i32 to u8 may truncate the value
  --> $DIR/cast.rs:23:5
   |
23 |     1i32 as u8;
   |     ^^^^^^^^^^

error: casting f64 to isize may truncate the value
  --> $DIR/cast.rs:25:5
   |
25 |     1f64 as isize;
   |     ^^^^^^^^^^^^^

error: casting f64 to usize may truncate the value
  --> $DIR/cast.rs:26:5
   |
26 |     1f64 as usize;
   |     ^^^^^^^^^^^^^

error: casting f64 to usize may lose the sign of the value
  --> $DIR/cast.rs:26:5
   |
26 |     1f64 as usize;
   |     ^^^^^^^^^^^^^

error: casting u8 to i8 may wrap around the value
  --> $DIR/cast.rs:30:5
   |
30 |     1u8 as i8;
   |     ^^^^^^^^^
   |
note: lint level defined here
  --> $DIR/cast.rs:4:71
   |
4  | #[deny(cast_precision_loss, cast_possible_truncation, cast_sign_loss, cast_possible_wrap)]
   |                                                                       ^^^^^^^^^^^^^^^^^^

error: casting u16 to i16 may wrap around the value
  --> $DIR/cast.rs:31:5
   |
31 |     1u16 as i16;
   |     ^^^^^^^^^^^

error: casting u32 to i32 may wrap around the value
  --> $DIR/cast.rs:32:5
   |
32 |     1u32 as i32;
   |     ^^^^^^^^^^^

error: casting u64 to i64 may wrap around the value
  --> $DIR/cast.rs:33:5
   |
33 |     1u64 as i64;
   |     ^^^^^^^^^^^

error: casting usize to isize may wrap around the value
  --> $DIR/cast.rs:34:5
   |
34 |     1usize as isize;
   |     ^^^^^^^^^^^^^^^

error: casting i32 to u32 may lose the sign of the value
  --> $DIR/cast.rs:37:5
   |
37 |     1i32 as u32;
   |     ^^^^^^^^^^^

error: casting isize to usize may lose the sign of the value
  --> $DIR/cast.rs:38:5
   |
38 |     1isize as usize;
   |     ^^^^^^^^^^^^^^^

error: casting isize to i8 may truncate the value
  --> $DIR/cast.rs:42:5
   |
42 |     1isize as i8;
   |     ^^^^^^^^^^^^

error: casting isize to f64 causes a loss of precision on targets with 64-bit wide pointers (isize is 64 bits wide, but f64's mantissa is only 52 bits wide)
  --> $DIR/cast.rs:43:5
   |
43 |     1isize as f64;
   |     ^^^^^^^^^^^^^

error: casting usize to f64 causes a loss of precision on targets with 64-bit wide pointers (usize is 64 bits wide, but f64's mantissa is only 52 bits wide)
  --> $DIR/cast.rs:44:5
   |
44 |     1usize as f64;
   |     ^^^^^^^^^^^^^

error: casting isize to f32 causes a loss of precision (isize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)
  --> $DIR/cast.rs:45:5
   |
45 |     1isize as f32;
   |     ^^^^^^^^^^^^^

error: casting usize to f32 causes a loss of precision (usize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)
  --> $DIR/cast.rs:46:5
   |
46 |     1usize as f32;
   |     ^^^^^^^^^^^^^

error: casting isize to i32 may truncate the value on targets with 64-bit wide pointers
  --> $DIR/cast.rs:47:5
   |
47 |     1isize as i32;
   |     ^^^^^^^^^^^^^

error: casting isize to u32 may lose the sign of the value
  --> $DIR/cast.rs:48:5
   |
48 |     1isize as u32;
   |     ^^^^^^^^^^^^^

error: casting isize to u32 may truncate the value on targets with 64-bit wide pointers
  --> $DIR/cast.rs:48:5
   |
48 |     1isize as u32;
   |     ^^^^^^^^^^^^^

error: casting usize to u32 may truncate the value on targets with 64-bit wide pointers
  --> $DIR/cast.rs:50:5
   |
50 |     1usize as u32;
   |     ^^^^^^^^^^^^^

error: casting usize to i32 may truncate the value on targets with 64-bit wide pointers
  --> $DIR/cast.rs:51:5
   |
51 |     1usize as i32;
   |     ^^^^^^^^^^^^^

error: casting usize to i32 may wrap around the value on targets with 32-bit wide pointers
  --> $DIR/cast.rs:51:5
   |
51 |     1usize as i32;
   |     ^^^^^^^^^^^^^

error: casting i64 to isize may truncate the value on targets with 32-bit wide pointers
  --> $DIR/cast.rs:54:5
   |
54 |     1i64 as isize;
   |     ^^^^^^^^^^^^^

error: casting i64 to usize may lose the sign of the value
  --> $DIR/cast.rs:55:5
   |
55 |     1i64 as usize;
   |     ^^^^^^^^^^^^^

error: casting i64 to usize may truncate the value on targets with 32-bit wide pointers
  --> $DIR/cast.rs:55:5
   |
55 |     1i64 as usize;
   |     ^^^^^^^^^^^^^

error: casting u64 to isize may truncate the value on targets with 32-bit wide pointers
  --> $DIR/cast.rs:57:5
   |
57 |     1u64 as isize;
   |     ^^^^^^^^^^^^^

error: casting u64 to isize may wrap around the value on targets with 64-bit wide pointers
  --> $DIR/cast.rs:57:5
   |
57 |     1u64 as isize;
   |     ^^^^^^^^^^^^^

error: casting u64 to usize may truncate the value on targets with 32-bit wide pointers
  --> $DIR/cast.rs:59:5
   |
59 |     1u64 as usize;
   |     ^^^^^^^^^^^^^

error: casting u32 to isize may wrap around the value on targets with 32-bit wide pointers
  --> $DIR/cast.rs:60:5
   |
60 |     1u32 as isize;
   |     ^^^^^^^^^^^^^

error: casting i32 to usize may lose the sign of the value
  --> $DIR/cast.rs:63:5
   |
63 |     1i32 as usize;
   |     ^^^^^^^^^^^^^

warning: casting to the same type is unnecessary (i32 -> i32)
  --> $DIR/cast.rs:66:5
   |
66 |     1i32 as i32;
   |     ^^^^^^^^^^^
   |
   = note: #[warn(cast_unnecessary)] on by default

warning: casting to the same type is unnecessary (f32 -> f32)
  --> $DIR/cast.rs:67:5
   |
67 |     1f32 as f32;
   |     ^^^^^^^^^^^
   |
   = note: #[warn(cast_unnecessary)] on by default

warning: casting to the same type is unnecessary (bool -> bool)
  --> $DIR/cast.rs:68:5
   |
68 |     false as bool;
   |     ^^^^^^^^^^^^^
   |
   = note: #[warn(cast_unnecessary)] on by default

warning: casting to the same type is unnecessary (&i32 -> &i32)
  --> $DIR/cast.rs:69:5
   |
69 |     &1i32 as &i32;
   |     ^^^^^^^^^^^^^
   |
   = note: #[warn(cast_unnecessary)] on by default

error: aborting due to 42 previous errors

