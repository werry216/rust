error: avoid using `collect()` when not needed
  --> $DIR/needless_collect.rs:21:5
   |
LL |     let indirect_positive = sample.iter().collect::<Vec<_>>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::needless-collect` implied by `-D warnings`
help: Use the original Iterator instead of collecting it and then producing a new one
   |
LL |     
LL |     sample.iter()
   |

error: avoid using `collect()` when not needed
  --> $DIR/needless_collect.rs:11:29
   |
LL |     let len = sample.iter().collect::<Vec<_>>().len();
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `count()`

error: avoid using `collect()` when not needed
  --> $DIR/needless_collect.rs:12:15
   |
LL |     if sample.iter().collect::<Vec<_>>().is_empty() {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `get(0).is_none()`

error: avoid using `collect()` when not needed
  --> $DIR/needless_collect.rs:15:28
   |
LL |     sample.iter().cloned().collect::<Vec<_>>().contains(&1);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `any(|x| x == 1)`

error: avoid using `collect()` when not needed
  --> $DIR/needless_collect.rs:16:35
   |
LL |     sample.iter().map(|x| (x, x)).collect::<HashMap<_, _>>().len();
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `count()`

error: aborting due to 5 previous errors

