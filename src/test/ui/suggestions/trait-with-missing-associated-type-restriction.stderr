error[E0308]: mismatched types
  --> $DIR/trait-with-missing-associated-type-restriction.rs:12:9
   |
LL |     qux(x.func())
   |         ^^^^^^^^ expected `usize`, found associated type
   |
   = note:         expected type `usize`
           found associated type `<impl Trait as Trait>::A`
help: consider constraining the associated type `<impl Trait as Trait>::A` to `usize`
   |
LL | fn foo(_: impl Trait, x: impl Trait<A = usize>) {
   |                                    ^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/trait-with-missing-associated-type-restriction.rs:16:9
   |
LL |     qux(x.func())
   |         ^^^^^^^^ expected `usize`, found associated type
   |
   = note:         expected type `usize`
           found associated type `<T as Trait>::A`
help: consider constraining the associated type `<T as Trait>::A` to `usize`
   |
LL | fn bar<T: Trait<A = usize>>(x: T) {
   |                ^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/trait-with-missing-associated-type-restriction.rs:20:9
   |
LL |     qux(x.func())
   |         ^^^^^^^^ expected `usize`, found associated type
   |
   = note:         expected type `usize`
           found associated type `<impl Trait<i32> as Trait<i32>>::A`
help: consider constraining the associated type `<impl Trait<i32> as Trait<i32>>::A` to `usize`
   |
LL | fn foo2(x: impl Trait<i32, A = usize>) {
   |                          ^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/trait-with-missing-associated-type-restriction.rs:24:9
   |
LL |     qux(x.func())
   |         ^^^^^^^^ expected `usize`, found associated type
   |
   = note:         expected type `usize`
           found associated type `<T as Trait<i32>>::A`
help: consider constraining the associated type `<T as Trait<i32>>::A` to `usize`
   |
LL | fn bar2<T: Trait<i32, A = usize>>(x: T) {
   |                     ^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/trait-with-missing-associated-type-restriction.rs:28:9
   |
LL | fn baz<D: std::fmt::Debug, T: Trait<A = D>>(x: T) {
   |        - this type parameter
LL |     qux(x.func())
   |         ^^^^^^^^ expected `usize`, found type parameter `D`
   |
   = note:        expected type `usize`
           found type parameter `D`

error[E0308]: mismatched types
  --> $DIR/trait-with-missing-associated-type-restriction.rs:32:9
   |
LL |     qux(x)
   |         ^ expected `usize`, found mutable reference
   |
   = note:           expected type `usize`
           found mutable reference `&mut dyn Trait<(), A = ()>`

error[E0308]: mismatched types
  --> $DIR/trait-with-missing-associated-type-restriction.rs:36:9
   |
LL |     qux(x.func())
   |         ^^^^^^^^ expected `usize`, found associated type
   |
   = note:         expected type `usize`
           found associated type `<T as Trait>::A`
help: consider constraining the associated type `<T as Trait>::A` to `usize`
   |
LL | fn ban<T>(x: T) where T: Trait<A = usize> {
   |                               ^^^^^^^^^^^

error: aborting due to 7 previous errors

For more information about this error, try `rustc --explain E0308`.
