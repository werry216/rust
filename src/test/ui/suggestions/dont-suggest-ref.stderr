error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:50:17
   |
LL |     let X(_t) = *s;
   |           --    ^^
   |           |     |
   |           |     cannot move out of borrowed content
   |           |     help: consider removing the `*`: `s`
   |           data moved here
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:50:11
   |
LL |     let X(_t) = *s;
   |           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:54:30
   |
LL |     if let Either::One(_t) = *r { }
   |                        --    ^^
   |                        |     |
   |                        |     cannot move out of borrowed content
   |                        |     help: consider removing the `*`: `r`
   |                        data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:54:24
   |
LL |     if let Either::One(_t) = *r { }
   |                        ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:58:33
   |
LL |     while let Either::One(_t) = *r { }
   |                           --    ^^
   |                           |     |
   |                           |     cannot move out of borrowed content
   |                           |     help: consider removing the `*`: `r`
   |                           data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:58:27
   |
LL |     while let Either::One(_t) = *r { }
   |                           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:62:11
   |
LL |     match *r {
   |           ^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider removing the `*`: `r`
...
LL |         Either::One(_t)
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:66:21
   |
LL |         Either::One(_t)
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:69:11
   |
LL |     match *r {
   |           ^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider removing the `*`: `r`
...
LL |         Either::One(_t) => (),
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:73:21
   |
LL |         Either::One(_t) => (),
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:78:17
   |
LL |     let X(_t) = *sm;
   |           --    ^^^
   |           |     |
   |           |     cannot move out of borrowed content
   |           |     help: consider removing the `*`: `sm`
   |           data moved here
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:78:11
   |
LL |     let X(_t) = *sm;
   |           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:82:30
   |
LL |     if let Either::One(_t) = *rm { }
   |                        --    ^^^
   |                        |     |
   |                        |     cannot move out of borrowed content
   |                        |     help: consider removing the `*`: `rm`
   |                        data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:82:24
   |
LL |     if let Either::One(_t) = *rm { }
   |                        ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:86:33
   |
LL |     while let Either::One(_t) = *rm { }
   |                           --    ^^^
   |                           |     |
   |                           |     cannot move out of borrowed content
   |                           |     help: consider removing the `*`: `rm`
   |                           data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:86:27
   |
LL |     while let Either::One(_t) = *rm { }
   |                           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:90:11
   |
LL |     match *rm {
   |           ^^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider removing the `*`: `rm`
...
LL |         Either::One(_t)
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:94:21
   |
LL |         Either::One(_t)
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:97:11
   |
LL |     match *rm {
   |           ^^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider removing the `*`: `rm`
...
LL |         Either::One(_t) => (),
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:101:21
   |
LL |         Either::One(_t) => (),
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:105:11
   |
LL |     match *rm {
   |           ^^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider removing the `*`: `rm`
...
LL |         Either::One(_t) => (),
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:109:21
   |
LL |         Either::One(_t) => (),
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:114:17
   |
LL |     let X(_t) = vs[0];
   |           --    ^^^^^
   |           |     |
   |           |     cannot move out of borrowed content
   |           |     help: consider borrowing here: `&vs[0]`
   |           data moved here
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:114:11
   |
LL |     let X(_t) = vs[0];
   |           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:118:30
   |
LL |     if let Either::One(_t) = vr[0] { }
   |                        --    ^^^^^
   |                        |     |
   |                        |     cannot move out of borrowed content
   |                        |     help: consider borrowing here: `&vr[0]`
   |                        data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:118:24
   |
LL |     if let Either::One(_t) = vr[0] { }
   |                        ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:122:33
   |
LL |     while let Either::One(_t) = vr[0] { }
   |                           --    ^^^^^
   |                           |     |
   |                           |     cannot move out of borrowed content
   |                           |     help: consider borrowing here: `&vr[0]`
   |                           data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:122:27
   |
LL |     while let Either::One(_t) = vr[0] { }
   |                           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:126:11
   |
LL |     match vr[0] {
   |           ^^^^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider borrowing here: `&vr[0]`
...
LL |         Either::One(_t)
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:130:21
   |
LL |         Either::One(_t)
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:133:11
   |
LL |     match vr[0] {
   |           ^^^^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider borrowing here: `&vr[0]`
...
LL |         Either::One(_t) => (),
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:137:21
   |
LL |         Either::One(_t) => (),
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:142:17
   |
LL |     let X(_t) = vsm[0];
   |           --    ^^^^^^
   |           |     |
   |           |     cannot move out of borrowed content
   |           |     help: consider borrowing here: `&vsm[0]`
   |           data moved here
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:142:11
   |
LL |     let X(_t) = vsm[0];
   |           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:146:30
   |
LL |     if let Either::One(_t) = vrm[0] { }
   |                        --    ^^^^^^
   |                        |     |
   |                        |     cannot move out of borrowed content
   |                        |     help: consider borrowing here: `&vrm[0]`
   |                        data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:146:24
   |
LL |     if let Either::One(_t) = vrm[0] { }
   |                        ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:150:33
   |
LL |     while let Either::One(_t) = vrm[0] { }
   |                           --    ^^^^^^
   |                           |     |
   |                           |     cannot move out of borrowed content
   |                           |     help: consider borrowing here: `&vrm[0]`
   |                           data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:150:27
   |
LL |     while let Either::One(_t) = vrm[0] { }
   |                           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:154:11
   |
LL |     match vrm[0] {
   |           ^^^^^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider borrowing here: `&vrm[0]`
...
LL |         Either::One(_t)
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:158:21
   |
LL |         Either::One(_t)
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:161:11
   |
LL |     match vrm[0] {
   |           ^^^^^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider borrowing here: `&vrm[0]`
...
LL |         Either::One(_t) => (),
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:165:21
   |
LL |         Either::One(_t) => (),
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:169:11
   |
LL |     match vrm[0] {
   |           ^^^^^^
   |           |
   |           cannot move out of borrowed content
   |           help: consider borrowing here: `&vrm[0]`
...
LL |         Either::One(_t) => (),
   |                     -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:173:21
   |
LL |         Either::One(_t) => (),
   |                     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:180:18
   |
LL |     let &X(_t) = s;
   |         ------   ^ cannot move out of borrowed content
   |         |  |
   |         |  data moved here
   |         help: consider removing the `&`: `X(_t)`
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:180:12
   |
LL |     let &X(_t) = s;
   |            ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:184:31
   |
LL |     if let &Either::One(_t) = r { }
   |            ----------------   ^ cannot move out of borrowed content
   |            |            |
   |            |            data moved here
   |            help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:184:25
   |
LL |     if let &Either::One(_t) = r { }
   |                         ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:188:34
   |
LL |     while let &Either::One(_t) = r { }
   |               ----------------   ^ cannot move out of borrowed content
   |               |            |
   |               |            data moved here
   |               help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:188:28
   |
LL |     while let &Either::One(_t) = r { }
   |                            ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:192:11
   |
LL |     match r {
   |           ^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &Either::One(_t)
   |         ----------------
   |         |            |
   |         |            data moved here
   |         help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:194:22
   |
LL |         &Either::One(_t)
   |                      ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:200:11
   |
LL |     match r {
   |           ^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &Either::One(_t) => (),
   |         ----------------
   |         |            |
   |         |            data moved here
   |         help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:202:22
   |
LL |         &Either::One(_t) => (),
   |                      ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:207:11
   |
LL |     match r {
   |           ^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &Either::One(_t) => (),
   |         ----------------
   |         |            |
   |         |            data moved here
   |         help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:209:22
   |
LL |         &Either::One(_t) => (),
   |                      ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:219:22
   |
LL |     let &mut X(_t) = sm;
   |         ----------   ^^ cannot move out of borrowed content
   |         |      |
   |         |      data moved here
   |         help: consider removing the `&mut`: `X(_t)`
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:219:16
   |
LL |     let &mut X(_t) = sm;
   |                ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:223:35
   |
LL |     if let &mut Either::One(_t) = rm { }
   |            --------------------   ^^ cannot move out of borrowed content
   |            |                |
   |            |                data moved here
   |            help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:223:29
   |
LL |     if let &mut Either::One(_t) = rm { }
   |                             ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:227:38
   |
LL |     while let &mut Either::One(_t) = rm { }
   |               --------------------   ^^ cannot move out of borrowed content
   |               |                |
   |               |                data moved here
   |               help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:227:32
   |
LL |     while let &mut Either::One(_t) = rm { }
   |                                ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:231:11
   |
LL |     match rm {
   |           ^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut Either::One(_t) => (),
   |                          -- data moved here
...
LL |         &mut Either::Two(_t) => (),
   |                          -- ...and here
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:233:26
   |
LL |         &mut Either::One(_t) => (),
   |                          ^^
...
LL |         &mut Either::Two(_t) => (),
   |                          ^^
help: consider removing the `&mut`
   |
LL |         Either::One(_t) => (),
   |         ^^^^^^^^^^^^^^^
help: consider removing the `&mut`
   |
LL |         Either::Two(_t) => (),
   |         ^^^^^^^^^^^^^^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:240:11
   |
LL |     match rm {
   |           ^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut Either::One(_t) => (),
   |         --------------------
   |         |                |
   |         |                data moved here
   |         help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:242:26
   |
LL |         &mut Either::One(_t) => (),
   |                          ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:247:11
   |
LL |     match rm {
   |           ^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut Either::One(_t) => (),
   |         --------------------
   |         |                |
   |         |                data moved here
   |         help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:249:26
   |
LL |         &mut Either::One(_t) => (),
   |                          ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:254:11
   |
LL |     match rm {
   |           ^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut Either::One(_t) => (),
   |         --------------------
   |         |                |
   |         |                data moved here
   |         help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:256:26
   |
LL |         &mut Either::One(_t) => (),
   |                          ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:268:21
   |
LL |     let (&X(_t),) = (&x.clone(),);
   |             --      ^^^^^^^^^^^^^ cannot move out of borrowed content
   |             |
   |             data moved here
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:268:13
   |
LL |     let (&X(_t),) = (&x.clone(),);
   |             ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:270:34
   |
LL |     if let (&Either::One(_t),) = (&e.clone(),) { }
   |                          --      ^^^^^^^^^^^^^ cannot move out of borrowed content
   |                          |
   |                          data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:270:26
   |
LL |     if let (&Either::One(_t),) = (&e.clone(),) { }
   |                          ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:272:37
   |
LL |     while let (&Either::One(_t),) = (&e.clone(),) { }
   |                             --      ^^^^^^^^^^^^^ cannot move out of borrowed content
   |                             |
   |                             data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:272:29
   |
LL |     while let (&Either::One(_t),) = (&e.clone(),) { }
   |                             ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:274:11
   |
LL |     match (&e.clone(),) {
   |           ^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         (&Either::One(_t),)
   |                       -- data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:276:23
   |
LL |         (&Either::One(_t),)
   |                       ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:282:25
   |
LL |     let (&mut X(_t),) = (&mut xm.clone(),);
   |                 --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |                 |
   |                 data moved here
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:282:17
   |
LL |     let (&mut X(_t),) = (&mut xm.clone(),);
   |                 ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:284:38
   |
LL |     if let (&mut Either::One(_t),) = (&mut em.clone(),) { }
   |                              --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |                              |
   |                              data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:284:30
   |
LL |     if let (&mut Either::One(_t),) = (&mut em.clone(),) { }
   |                              ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:286:41
   |
LL |     while let (&mut Either::One(_t),) = (&mut em.clone(),) { }
   |                                 --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |                                 |
   |                                 data moved here
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:286:33
   |
LL |     while let (&mut Either::One(_t),) = (&mut em.clone(),) { }
   |                                 ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:288:11
   |
LL |     match (&mut em.clone(),) {
   |           ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         (&mut Either::One(_t),) => (),
   |                           -- data moved here
LL |         (&mut Either::Two(_t),) => (),
   |                           -- ...and here
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:290:27
   |
LL |         (&mut Either::One(_t),) => (),
   |                           ^^
LL |         (&mut Either::Two(_t),) => (),
   |                           ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:298:18
   |
LL |     let &X(_t) = &x;
   |         ------   ^^ cannot move out of borrowed content
   |         |  |
   |         |  data moved here
   |         help: consider removing the `&`: `X(_t)`
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:298:12
   |
LL |     let &X(_t) = &x;
   |            ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:302:31
   |
LL |     if let &Either::One(_t) = &e { }
   |            ----------------   ^^ cannot move out of borrowed content
   |            |            |
   |            |            data moved here
   |            help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:302:25
   |
LL |     if let &Either::One(_t) = &e { }
   |                         ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:306:34
   |
LL |     while let &Either::One(_t) = &e { }
   |               ----------------   ^^ cannot move out of borrowed content
   |               |            |
   |               |            data moved here
   |               help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:306:28
   |
LL |     while let &Either::One(_t) = &e { }
   |                            ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:310:11
   |
LL |     match &e {
   |           ^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &Either::One(_t)
   |         ----------------
   |         |            |
   |         |            data moved here
   |         help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:312:22
   |
LL |         &Either::One(_t)
   |                      ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:318:11
   |
LL |     match &e {
   |           ^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &Either::One(_t) => (),
   |         ----------------
   |         |            |
   |         |            data moved here
   |         help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:320:22
   |
LL |         &Either::One(_t) => (),
   |                      ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:325:11
   |
LL |     match &e {
   |           ^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &Either::One(_t) => (),
   |         ----------------
   |         |            |
   |         |            data moved here
   |         help: consider removing the `&`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:327:22
   |
LL |         &Either::One(_t) => (),
   |                      ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:333:22
   |
LL |     let &mut X(_t) = &mut xm;
   |         ----------   ^^^^^^^ cannot move out of borrowed content
   |         |      |
   |         |      data moved here
   |         help: consider removing the `&mut`: `X(_t)`
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:333:16
   |
LL |     let &mut X(_t) = &mut xm;
   |                ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:337:35
   |
LL |     if let &mut Either::One(_t) = &mut em { }
   |            --------------------   ^^^^^^^ cannot move out of borrowed content
   |            |                |
   |            |                data moved here
   |            help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:337:29
   |
LL |     if let &mut Either::One(_t) = &mut em { }
   |                             ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:341:38
   |
LL |     while let &mut Either::One(_t) = &mut em { }
   |               --------------------   ^^^^^^^ cannot move out of borrowed content
   |               |                |
   |               |                data moved here
   |               help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:341:32
   |
LL |     while let &mut Either::One(_t) = &mut em { }
   |                                ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:345:11
   |
LL |     match &mut em {
   |           ^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut Either::One(_t)
   |         --------------------
   |         |                |
   |         |                data moved here
   |         help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:347:26
   |
LL |         &mut Either::One(_t)
   |                          ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:353:11
   |
LL |     match &mut em {
   |           ^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut Either::One(_t) => (),
   |         --------------------
   |         |                |
   |         |                data moved here
   |         help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:355:26
   |
LL |         &mut Either::One(_t) => (),
   |                          ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:360:11
   |
LL |     match &mut em {
   |           ^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut Either::One(_t) => (),
   |         --------------------
   |         |                |
   |         |                data moved here
   |         help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:362:26
   |
LL |         &mut Either::One(_t) => (),
   |                          ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:367:11
   |
LL |     match &mut em {
   |           ^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut Either::One(_t) => (),
   |         --------------------
   |         |                |
   |         |                data moved here
   |         help: consider removing the `&mut`: `Either::One(_t)`
   |
note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:369:26
   |
LL |         &mut Either::One(_t) => (),
   |                          ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:377:27
   |
LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());
   |         ---------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |         |   |      |
   |         |   |      ...and here
   |         |   data moved here
   |         help: consider removing the `&`: `(X(_t), X(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:377:13
   |
LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());
   |             ^^     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:381:50
   |
LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }
   |            -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |            |             |                |
   |            |             |                ...and here
   |            |             data moved here
   |            help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:381:26
   |
LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }
   |                          ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:385:53
   |
LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }
   |               -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |               |             |                |
   |               |             |                ...and here
   |               |             data moved here
   |               help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:385:29
   |
LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }
   |                             ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:389:11
   |
LL |     match &(e.clone(), e.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &(Either::One(_t), Either::Two(_u)) => (),
   |                       --               -- ...and here
   |                       |
   |                       data moved here
...
LL |         &(Either::Two(_t), Either::One(_u)) => (),
   |                       -- ...and here   -- ...and here
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:391:23
   |
LL |         &(Either::One(_t), Either::Two(_u)) => (),
   |                       ^^               ^^
...
LL |         &(Either::Two(_t), Either::One(_u)) => (),
   |                       ^^               ^^
help: consider removing the `&`
   |
LL |         (Either::One(_t), Either::Two(_u)) => (),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider removing the `&`
   |
LL |         (Either::Two(_t), Either::One(_u)) => (),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:399:11
   |
LL |     match &(e.clone(), e.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &(Either::One(_t), Either::Two(_u))
   |         -----------------------------------
   |         |             |                |
   |         |             |                ...and here
   |         |             data moved here
   |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:401:23
   |
LL |         &(Either::One(_t), Either::Two(_u))
   |                       ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:408:11
   |
LL |     match &(e.clone(), e.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &(Either::One(_t), Either::Two(_u)) => (),
   |         -----------------------------------
   |         |             |                |
   |         |             |                ...and here
   |         |             data moved here
   |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:410:23
   |
LL |         &(Either::One(_t), Either::Two(_u)) => (),
   |                       ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:416:11
   |
LL |     match &(e.clone(), e.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &(Either::One(_t), Either::Two(_u)) => (),
   |         -----------------------------------
   |         |             |                |
   |         |             |                ...and here
   |         |             data moved here
   |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:418:23
   |
LL |         &(Either::One(_t), Either::Two(_u)) => (),
   |                       ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:429:31
   |
LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());
   |         -------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |         |       |      |
   |         |       |      ...and here
   |         |       data moved here
   |         help: consider removing the `&mut`: `(X(_t), X(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:429:17
   |
LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());
   |                 ^^     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:433:54
   |
LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }
   |            ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |            |                 |                |
   |            |                 |                ...and here
   |            |                 data moved here
   |            help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:433:30
   |
LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }
   |                              ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:437:57
   |
LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }
   |               ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
   |               |                 |                |
   |               |                 |                ...and here
   |               |                 data moved here
   |               help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:437:33
   |
LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }
   |                                 ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:441:11
   |
LL |     match &mut (em.clone(), em.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut (Either::One(_t), Either::Two(_u)) => (),
   |                           --               -- ...and here
   |                           |
   |                           data moved here
...
LL |         &mut (Either::Two(_t), Either::One(_u)) => (),
   |                           -- ...and here   -- ...and here
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:443:27
   |
LL |         &mut (Either::One(_t), Either::Two(_u)) => (),
   |                           ^^               ^^
...
LL |         &mut (Either::Two(_t), Either::One(_u)) => (),
   |                           ^^               ^^
help: consider removing the `&mut`
   |
LL |         (Either::One(_t), Either::Two(_u)) => (),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider removing the `&mut`
   |
LL |         (Either::Two(_t), Either::One(_u)) => (),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:451:11
   |
LL |     match &mut (em.clone(), em.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut (Either::One(_t), Either::Two(_u))
   |         ---------------------------------------
   |         |                 |                |
   |         |                 |                ...and here
   |         |                 data moved here
   |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:453:27
   |
LL |         &mut (Either::One(_t), Either::Two(_u))
   |                           ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:460:11
   |
LL |     match &mut (em.clone(), em.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut (Either::One(_t), Either::Two(_u)) => (),
   |         ---------------------------------------
   |         |                 |                |
   |         |                 |                ...and here
   |         |                 data moved here
   |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:462:27
   |
LL |         &mut (Either::One(_t), Either::Two(_u)) => (),
   |                           ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:468:11
   |
LL |     match &mut (em.clone(), em.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut (Either::One(_t), Either::Two(_u)) => (),
   |         ---------------------------------------
   |         |                 |                |
   |         |                 |                ...and here
   |         |                 data moved here
   |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:470:27
   |
LL |         &mut (Either::One(_t), Either::Two(_u)) => (),
   |                           ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:476:11
   |
LL |     match &mut (em.clone(), em.clone()) {
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content
LL |         //~^ ERROR cannot move
LL |         &mut (Either::One(_t), Either::Two(_u)) => (),
   |         ---------------------------------------
   |         |                 |                |
   |         |                 |                ...and here
   |         |                 data moved here
   |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:478:27
   |
LL |         &mut (Either::One(_t), Either::Two(_u)) => (),
   |                           ^^               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:214:11
   |
LL |     fn f1(&X(_t): &X) { }
   |           ^^^--^
   |           |  |
   |           |  data moved here
   |           cannot move out of borrowed content
   |           help: consider removing the `&`: `X(_t)`
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:214:14
   |
LL |     fn f1(&X(_t): &X) { }
   |              ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:261:11
   |
LL |     fn f2(&mut X(_t): &mut X) { }
   |           ^^^^^^^--^
   |           |      |
   |           |      data moved here
   |           cannot move out of borrowed content
   |           help: consider removing the `&mut`: `X(_t)`
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:261:18
   |
LL |     fn f2(&mut X(_t): &mut X) { }
   |                  ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:279:11
   |
LL |     fn f3((&X(_t),): (&X,)) { }
   |           ^^^^--^^^
   |           |   |
   |           |   data moved here
   |           cannot move out of borrowed content
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:279:15
   |
LL |     fn f3((&X(_t),): (&X,)) { }
   |               ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:293:11
   |
LL |     fn f4((&mut X(_t),): (&mut X,)) { }
   |           ^^^^^^^^--^^^
   |           |       |
   |           |       data moved here
   |           cannot move out of borrowed content
   |
note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:293:19
   |
LL |     fn f4((&mut X(_t),): (&mut X,)) { }
   |                   ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:424:11
   |
LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }
   |           ^^^^--^^^^^--^^
   |           |   |      |
   |           |   |      ...and here
   |           |   data moved here
   |           cannot move out of borrowed content
   |           help: consider removing the `&`: `(X(_t), X(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:424:15
   |
LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }
   |               ^^     ^^

error[E0507]: cannot move out of borrowed content
  --> $DIR/dont-suggest-ref.rs:484:11
   |
LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }
   |           ^^^^^^^^--^^^^^--^^
   |           |       |      |
   |           |       |      ...and here
   |           |       data moved here
   |           cannot move out of borrowed content
   |           help: consider removing the `&mut`: `(X(_t), X(_u))`
   |
note: move occurs because these variables have types that don't implement the `Copy` trait
  --> $DIR/dont-suggest-ref.rs:484:19
   |
LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }
   |                   ^^     ^^

error: aborting due to 77 previous errors

For more information about this error, try `rustc --explain E0507`.
