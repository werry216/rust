error: cannot infer an appropriate lifetime
  --> $DIR/object-lifetime-default-from-box-error.rs:18:5
   |
LL |     ss.r
   |     ^^^^ this needs to be `'static` but the borrow...
   |
note: ...can't outlive the anonymous lifetime #2 defined on the function body at 14:1
  --> $DIR/object-lifetime-default-from-box-error.rs:14:1
   |
LL | / fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait> {
LL | |     // `Box<SomeTrait>` defaults to a `'static` bound, so this return
LL | |     // is illegal.
LL | |
LL | |     ss.r
LL | | }
   | |_^
help: you can add a bound to the returned `dyn Trait` to make it last less than `'static` and match the anonymous lifetime #2 defined on the function body at 14:1
   |
LL | fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait + '_> {
   |                                                   ^^^^

error[E0621]: explicit lifetime required in the type of `ss`
  --> $DIR/object-lifetime-default-from-box-error.rs:31:12
   |
LL | fn store1<'b>(ss: &mut SomeStruct, b: Box<dyn SomeTrait+'b>) {
   |                   --------------- help: add explicit lifetime `'b` to the type of `ss`: `&mut SomeStruct<'b>`
...
LL |     ss.r = b;
   |            ^ lifetime `'b` required

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0621`.
