error[E0597]: `x` does not live long enough
  --> $DIR/issue-52534-1.rs:19:9
   |
LL |     fn bar(&self, x: &u32) -> &u32 {
   |            -----              ---- has type `&'0 u32`
   |            |
   |            has type `&'0 Test`
LL |         let x = 22;
LL |         &x
   |         ^^ `x` would have to be valid for `'0`
LL |     }
   |     - ...but `x` is only valid for the duration of the `bar` function, so it is dropped here while still borrowed
   |
   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments
   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>

error[E0597]: `x` does not live long enough
  --> $DIR/issue-52534-1.rs:25:5
   |
LL | fn foo(x: &u32) -> &u32 {
   |           ----     ---- also has type `&'0 u32`
   |           |
   |           has type `&'0 u32`
LL |     let x = 22;
LL |     &x
   |     ^^ `x` would have to be valid for `'0`
LL | }
   | - ...but `x` is only valid for the duration of the `foo` function, so it is dropped here while still borrowed
   |
   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments
   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>

error[E0597]: `x` does not live long enough
  --> $DIR/issue-52534-1.rs:30:6
   |
LL | fn baz(x: &u32) -> &&u32 {
   |           ----     ----- has type `&'0 &'0 u32`
   |           |
   |           has type `&'0 u32`
LL |     let x = 22;
LL |     &&x
   |      ^^ `x` would have to be valid for `'0`
LL | }
   | - ...but `x` is only valid for the duration of the `baz` function, so it is dropped here while still borrowed
   |
   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments
   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>

error[E0597]: borrowed value does not live long enough
  --> $DIR/issue-52534-1.rs:30:6
   |
LL |     &&x
   |      ^^ temporary value does not live long enough
LL | }
   | - temporary value only lives until here
   |
note: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 28:1...
  --> $DIR/issue-52534-1.rs:28:1
   |
LL | / fn baz(x: &u32) -> &&u32 {
LL | |     let x = 22;
LL | |     &&x
LL | | }
   | |_^

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0597`.
