PRINT-ATTR INPUT (DISPLAY): struct ItemWithSemi ;
PRINT-ATTR INPUT (DEBUG): TokenStream [
    Ident {
        ident: "struct",
        span: $DIR/allowed-attr-stmt-expr.rs:43:1: 43:7 (#0),
    },
    Ident {
        ident: "ItemWithSemi",
        span: $DIR/allowed-attr-stmt-expr.rs:43:8: 43:20 (#0),
    },
    Punct {
        ch: ';',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:43:20: 43:21 (#0),
    },
]
PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] struct Foo { }
PRINT-ATTR INPUT (DEBUG): TokenStream [
    Punct {
        ch: '#',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:29:9: 29:10 (#15),
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                ident: "rustc_dummy",
                span: $DIR/allowed-attr-stmt-expr.rs:29:11: 29:22 (#15),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:29:10: 29:23 (#15),
    },
    Ident {
        ident: "struct",
        span: $DIR/allowed-attr-stmt-expr.rs:47:16: 47:22 (#0),
    },
    Ident {
        ident: "Foo",
        span: $DIR/allowed-attr-stmt-expr.rs:47:23: 47:26 (#0),
    },
    Group {
        delimiter: Brace,
        stream: TokenStream [],
        span: $DIR/allowed-attr-stmt-expr.rs:47:27: 47:29 (#0),
    },
]
PRINT-ATTR INPUT (DISPLAY): #[expect_let] let string = "Hello, world!" ;
PRINT-ATTR INPUT (DEBUG): TokenStream [
    Punct {
        ch: '#',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:50:5: 50:6 (#0),
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                ident: "expect_let",
                span: $DIR/allowed-attr-stmt-expr.rs:50:7: 50:17 (#0),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:50:6: 50:18 (#0),
    },
    Ident {
        ident: "let",
        span: $DIR/allowed-attr-stmt-expr.rs:51:5: 51:8 (#0),
    },
    Ident {
        ident: "string",
        span: $DIR/allowed-attr-stmt-expr.rs:51:9: 51:15 (#0),
    },
    Punct {
        ch: '=',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:51:16: 51:17 (#0),
    },
    Literal {
        kind: Str,
        symbol: "Hello, world!",
        suffix: None,
        span: $DIR/allowed-attr-stmt-expr.rs:51:18: 51:33 (#0),
    },
    Punct {
        ch: ';',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:51:33: 51:34 (#0),
    },
]
PRINT-ATTR INPUT (DISPLAY): #[expect_print_stmt] println ! ("{}", string) ;
PRINT-ATTR INPUT (DEBUG): TokenStream [
    Punct {
        ch: '#',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:54:5: 54:6 (#0),
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                ident: "expect_print_stmt",
                span: $DIR/allowed-attr-stmt-expr.rs:54:7: 54:24 (#0),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:54:6: 54:25 (#0),
    },
    Ident {
        ident: "println",
        span: $DIR/allowed-attr-stmt-expr.rs:55:5: 55:12 (#0),
    },
    Punct {
        ch: '!',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:55:12: 55:13 (#0),
    },
    Group {
        delimiter: Parenthesis,
        stream: TokenStream [
            Literal {
                kind: Str,
                symbol: "{}",
                suffix: None,
                span: $DIR/allowed-attr-stmt-expr.rs:55:14: 55:18 (#0),
            },
            Punct {
                ch: ',',
                spacing: Alone,
                span: $DIR/allowed-attr-stmt-expr.rs:55:18: 55:19 (#0),
            },
            Ident {
                ident: "string",
                span: $DIR/allowed-attr-stmt-expr.rs:55:20: 55:26 (#0),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:55:13: 55:27 (#0),
    },
    Punct {
        ch: ';',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:55:27: 55:28 (#0),
    },
]
PRINT-ATTR INPUT (DISPLAY): second_make_stmt ! (#[allow(dead_code)] struct Bar { }) ;
PRINT-ATTR INPUT (DEBUG): TokenStream [
    Ident {
        ident: "second_make_stmt",
        span: $DIR/allowed-attr-stmt-expr.rs:58:5: 58:21 (#0),
    },
    Punct {
        ch: '!',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:58:21: 58:22 (#0),
    },
    Group {
        delimiter: Parenthesis,
        stream: TokenStream [
            Punct {
                ch: '#',
                spacing: Alone,
                span: $DIR/allowed-attr-stmt-expr.rs:58:23: 58:24 (#0),
            },
            Group {
                delimiter: Bracket,
                stream: TokenStream [
                    Ident {
                        ident: "allow",
                        span: $DIR/allowed-attr-stmt-expr.rs:58:25: 58:30 (#0),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Ident {
                                ident: "dead_code",
                                span: $DIR/allowed-attr-stmt-expr.rs:58:31: 58:40 (#0),
                            },
                        ],
                        span: $DIR/allowed-attr-stmt-expr.rs:58:30: 58:41 (#0),
                    },
                ],
                span: $DIR/allowed-attr-stmt-expr.rs:58:24: 58:42 (#0),
            },
            Ident {
                ident: "struct",
                span: $DIR/allowed-attr-stmt-expr.rs:58:43: 58:49 (#0),
            },
            Ident {
                ident: "Bar",
                span: $DIR/allowed-attr-stmt-expr.rs:58:50: 58:53 (#0),
            },
            Group {
                delimiter: Brace,
                stream: TokenStream [],
                span: $DIR/allowed-attr-stmt-expr.rs:58:54: 58:56 (#0),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:58:22: 58:57 (#0),
    },
    Punct {
        ch: ';',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:58:57: 58:58 (#0),
    },
]
PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] #[allow(dead_code)] struct Bar { }
PRINT-ATTR INPUT (DEBUG): TokenStream [
    Punct {
        ch: '#',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:29:9: 29:10 (#37),
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                ident: "rustc_dummy",
                span: $DIR/allowed-attr-stmt-expr.rs:29:11: 29:22 (#37),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:29:10: 29:23 (#37),
    },
    Punct {
        ch: '#',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:58:23: 58:24 (#0),
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                ident: "allow",
                span: $DIR/allowed-attr-stmt-expr.rs:58:25: 58:30 (#0),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Ident {
                        ident: "dead_code",
                        span: $DIR/allowed-attr-stmt-expr.rs:58:31: 58:40 (#0),
                    },
                ],
                span: $DIR/allowed-attr-stmt-expr.rs:58:30: 58:41 (#0),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:58:24: 58:42 (#0),
    },
    Ident {
        ident: "struct",
        span: $DIR/allowed-attr-stmt-expr.rs:58:43: 58:49 (#0),
    },
    Ident {
        ident: "Bar",
        span: $DIR/allowed-attr-stmt-expr.rs:58:50: 58:53 (#0),
    },
    Group {
        delimiter: Brace,
        stream: TokenStream [],
        span: $DIR/allowed-attr-stmt-expr.rs:58:54: 58:56 (#0),
    },
]
PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] struct Other { }
PRINT-ATTR INPUT (DEBUG): TokenStream [
    Punct {
        ch: '#',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:61:5: 61:6 (#0),
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                ident: "rustc_dummy",
                span: $DIR/allowed-attr-stmt-expr.rs:61:7: 61:18 (#0),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:61:6: 61:19 (#0),
    },
    Ident {
        ident: "struct",
        span: $DIR/allowed-attr-stmt-expr.rs:62:5: 62:11 (#0),
    },
    Ident {
        ident: "Other",
        span: $DIR/allowed-attr-stmt-expr.rs:62:12: 62:17 (#0),
    },
    Group {
        delimiter: Brace,
        stream: TokenStream [],
        span: $DIR/allowed-attr-stmt-expr.rs:62:18: 62:20 (#0),
    },
]
PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] struct NonBracedStruct ;
PRINT-ATTR INPUT (DEBUG): TokenStream [
    Punct {
        ch: '#',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:67:5: 67:6 (#0),
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                ident: "rustc_dummy",
                span: $DIR/allowed-attr-stmt-expr.rs:67:7: 67:18 (#0),
            },
        ],
        span: $DIR/allowed-attr-stmt-expr.rs:67:6: 67:19 (#0),
    },
    Ident {
        ident: "struct",
        span: $DIR/allowed-attr-stmt-expr.rs:68:5: 68:11 (#0),
    },
    Ident {
        ident: "NonBracedStruct",
        span: $DIR/allowed-attr-stmt-expr.rs:68:12: 68:27 (#0),
    },
    Punct {
        ch: ';',
        spacing: Alone,
        span: $DIR/allowed-attr-stmt-expr.rs:68:27: 68:28 (#0),
    },
]
