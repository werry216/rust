error: unreachable pattern
  --> $DIR/match-empty-exhaustive_patterns.rs:21:9
   |
LL |         _ => {},
   |         ^
   |
note: lint level defined here
  --> $DIR/match-empty-exhaustive_patterns.rs:3:9
   |
LL | #![deny(unreachable_patterns)]
   |         ^^^^^^^^^^^^^^^^^^^^

error: unreachable pattern
  --> $DIR/match-empty-exhaustive_patterns.rs:28:9
   |
LL |         Some(_) => {}
   |         ^^^^^^^

error: unreachable pattern
  --> $DIR/match-empty-exhaustive_patterns.rs:32:9
   |
LL |         Some(_) => {}
   |         ^^^^^^^

error[E0004]: non-exhaustive patterns: type `u8` is non-empty
  --> $DIR/match-empty-exhaustive_patterns.rs:35:11
   |
LL |     match 0u8 {}
   |           ^^^
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: pattern `NonEmptyStruct` of type `NonEmptyStruct` is not handled
  --> $DIR/match-empty-exhaustive_patterns.rs:37:11
   |
LL | struct NonEmptyStruct(bool);
   | ----------------------------
   | |      |
   | |      variant not covered
   | `NonEmptyStruct` defined here
...
LL |     match NonEmptyStruct(true) {}
   |           ^^^^^^^^^^^^^^^^^^^^
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: pattern `Foo` of type `NonEmptyEnum1` is not handled
  --> $DIR/match-empty-exhaustive_patterns.rs:39:11
   |
LL | / enum NonEmptyEnum1 {
LL | |     Foo(bool),
   | |     --- variant not covered
LL | | }
   | |_- `NonEmptyEnum1` defined here
...
LL |       match NonEmptyEnum1::Foo(true) {}
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: multiple patterns of type `NonEmptyEnum2` are not handled
  --> $DIR/match-empty-exhaustive_patterns.rs:41:11
   |
LL | / enum NonEmptyEnum2 {
LL | |     Foo(bool),
   | |     --- variant not covered
LL | |     Bar,
   | |     --- variant not covered
LL | | }
   | |_- `NonEmptyEnum2` defined here
...
LL |       match NonEmptyEnum2::Foo(true) {}
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: multiple patterns of type `NonEmptyEnum5` are not handled
  --> $DIR/match-empty-exhaustive_patterns.rs:43:11
   |
LL | / enum NonEmptyEnum5 {
LL | |     V1, V2, V3, V4, V5,
LL | | }
   | |_- `NonEmptyEnum5` defined here
...
LL |       match NonEmptyEnum5::V1 {}
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error: aborting due to 8 previous errors

For more information about this error, try `rustc --explain E0004`.
