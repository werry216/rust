From 8bce7b9601aec46ee7704027dc173257d3e43492 Mon Sep 17 00:00:00 2001
From: bjorn3 <bjorn3@users.noreply.github.com>
Date: Fri, 14 Dec 2018 13:09:42 +0100
Subject: [PATCH] Disable stdsimd

---
 src/libcore/lib.rs | 2 ++
 src/libstd/lib.rs  | 4 +++-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/libcore/lib.rs b/src/libcore/lib.rs
index a51674f..313c173 100644
--- a/src/libcore/lib.rs
+++ b/src/libcore/lib.rs
@@ -248,6 +248,7 @@ macro_rules! test_v256 { ($item:item) => {}; }
 macro_rules! test_v512 { ($item:item) => {}; }
 #[allow(unused_macros)]
 macro_rules! vector_impl { ($([$f:ident, $($args:tt)*]),*) => { $($f!($($args)*);)* } }
+/*
 #[path = "../stdsimd/coresimd/mod.rs"]
 #[allow(missing_docs, missing_debug_implementations, dead_code, unused_imports)]
 #[unstable(feature = "stdsimd", issue = "48556")]
@@ -255,3 +256,4 @@ mod coresimd;
 
 #[stable(feature = "simd_arch", since = "1.27.0")]
 pub use coresimd::arch;
+*/
diff --git a/src/libstd/lib.rs b/src/libstd/lib.rs
index 90c8eaf..95541c3 100644
--- a/src/libstd/lib.rs
+++ b/src/libstd/lib.rs
@@ -287,7 +287,7 @@
 #![feature(rustc_attrs)]
 #![feature(rustc_const_unstable)]
 #![feature(std_internals)]
-#![feature(stdsimd)]
+//#![feature(stdsimd)]
 #![feature(shrink_to)]
 #![feature(slice_concat_ext)]
 #![feature(slice_internals)]
@@ -503,6 +503,7 @@ mod memchr;
 // compiler
 pub mod rt;
 
+/*
 // Pull in the `stdsimd` crate directly into libstd. This is the same as
 // libcore's arch/simd modules where the source of truth here is in a different
 // repository, but we pull things in here manually to get it into libstd.
@@ -526,6 +527,7 @@ mod coresimd {
 #[stable(feature = "simd_arch", since = "1.27.0")]
 #[cfg(not(test))]
 pub use stdsimd::arch;
+*/
 
 // Include a number of private modules that exist solely to provide
 // the rustdoc documentation for primitive types. Using `include!`
-- 
2.11.0

