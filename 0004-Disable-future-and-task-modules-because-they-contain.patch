From 8838226899913c8636fa00f4dfbc7497c685abc5 Mon Sep 17 00:00:00 2001
From: bjorn3 <bjorn3@users.noreply.github.com>
Date: Thu, 20 Sep 2018 18:16:25 +0200
Subject: [PATCH] Disable future and task modules, because they contain unsized
 types

---
 src/libcore/lib.rs    | 4 +++-
 src/libcore/option.rs | 4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/src/libcore/lib.rs b/src/libcore/lib.rs
index 09f5035..f129254 100644
--- a/src/libcore/lib.rs
+++ b/src/libcore/lib.rs
@@ -194,7 +194,7 @@ pub mod cell;
 pub mod char;
 pub mod panic;
 pub mod panicking;
-pub mod pin;
+//pub mod pin;
 pub mod iter;
 pub mod option;
 pub mod raw;
@@ -209,9 +209,11 @@ pub mod time;
 
 pub mod unicode;
 
+/*
 /* Async */
 pub mod future;
 pub mod task;
+*/
 
 /* Heap memory allocator trait */
 #[allow(missing_docs)]
diff --git a/src/libcore/option.rs b/src/libcore/option.rs
index 58bf6be..902d38f 100644
--- a/src/libcore/option.rs
+++ b/src/libcore/option.rs
@@ -147,7 +147,7 @@
 
 use iter::{FromIterator, FusedIterator, TrustedLen};
 use {hint, mem, ops::{self, Deref}};
-use pin::Pin;
+//use pin::Pin;
 
 // Note that this is not a lang item per se, but it has a hidden dependency on
 // `Iterator`, which is one. The compiler assumes that the `next` method of
@@ -271,6 +271,7 @@ impl<T> Option<T> {
     }
 
 
+    /*
     /// Converts from `Pin<&Option<T>>` to `Option<Pin<&T>>`
     #[inline]
     #[unstable(feature = "pin", issue = "49150")]
@@ -288,6 +289,7 @@ impl<T> Option<T> {
             Pin::get_mut_unchecked(self).as_mut().map(|x| Pin::new_unchecked(x))
         }
     }
+    */
 
     /////////////////////////////////////////////////////////////////////////
     // Getting to contained values
-- 
2.11.0

