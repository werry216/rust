error: item `PubOne` has a public `len` method but no corresponding `is_empty` method
  --> $DIR/len_zero.rs:9:1
   |
9  |   impl PubOne {
   |  _^ starting here...
10 | |     pub fn len(self: &Self) -> isize {
11 | |         1
12 | |     }
13 | | }
   | |_^ ...ending here
   |
note: lint level defined here
  --> $DIR/len_zero.rs:4:9
   |
4  | #![deny(len_without_is_empty, len_zero)]
   |         ^^^^^^^^^^^^^^^^^^^^

error: trait `PubTraitsToo` has a `len` method but no `is_empty` method
  --> $DIR/len_zero.rs:55:1
   |
55 |   pub trait PubTraitsToo {
   |  _^ starting here...
56 | |     fn len(self: &Self) -> isize;
57 | | }
   | |_^ ...ending here

error: item `HasIsEmpty` has a public `len` method but a private `is_empty` method
  --> $DIR/len_zero.rs:89:1
   |
89 |   impl HasIsEmpty {
   |  _^ starting here...
90 | |     pub fn len(self: &Self) -> isize {
91 | |         1
92 | |     }
93 | |
94 | |     fn is_empty(self: &Self) -> bool {
95 | |         false
96 | |     }
97 | | }
   | |_^ ...ending here

error: item `HasWrongIsEmpty` has a public `len` method but no corresponding `is_empty` method
   --> $DIR/len_zero.rs:118:1
    |
118 |   impl HasWrongIsEmpty {
    |  _^ starting here...
119 | |     pub fn len(self: &Self) -> isize {
120 | |         1
121 | |     }
122 | |
123 | |     pub fn is_empty(self: &Self, x : u32) -> bool {
124 | |         false
125 | |     }
126 | | }
    | |_^ ...ending here

error: length comparison to zero
   --> $DIR/len_zero.rs:130:8
    |
130 |     if x.len() == 0 {
    |        ^^^^^^^^^^^^
    |
note: lint level defined here
   --> $DIR/len_zero.rs:4:31
    |
4   | #![deny(len_without_is_empty, len_zero)]
    |                               ^^^^^^^^
help: consider using `is_empty`
    |     if x.is_empty() {

error: length comparison to zero
   --> $DIR/len_zero.rs:137:8
    |
137 |     if "".len() == 0 {
    |        ^^^^^^^^^^^^^
    |
help: consider using `is_empty`
    |     if "".is_empty() {

error: length comparison to zero
   --> $DIR/len_zero.rs:154:8
    |
154 |     if has_is_empty.len() == 0 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: consider using `is_empty`
    |     if has_is_empty.is_empty() {

error: length comparison to zero
   --> $DIR/len_zero.rs:160:8
    |
160 |     if has_is_empty.len() != 0 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: consider using `is_empty`
    |     if !has_is_empty.is_empty() {

error: length comparison to zero
   --> $DIR/len_zero.rs:166:8
    |
166 |     if has_is_empty.len() > 0 {
    |        ^^^^^^^^^^^^^^^^^^^^^^
    |
help: consider using `is_empty`
    |     if !has_is_empty.is_empty() {

error: length comparison to zero
   --> $DIR/len_zero.rs:175:8
    |
175 |     if with_is_empty.len() == 0 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: consider using `is_empty`
    |     if with_is_empty.is_empty() {

error: aborting due to 10 previous errors

