error: borrowed data escapes outside of closure
  --> $DIR/regions-nested-fns.rs:20:9
   |
LL |     let mut ay = &y; //~ ERROR E0495
   |         ------ `ay` is declared here, outside of the closure body
LL | 
LL |     ignore::<Box<for<'z> FnMut(&'z isize)>>(Box::new(|z| {
   |                                                       - `z` is a reference that is only valid in the closure body
...
LL |         ay = z;
   |         ^^^^^^ `z` escapes the closure body here

error[E0597]: `y` does not live long enough
  --> $DIR/regions-nested-fns.rs:15:18
   |
LL |     let mut ay = &y; //~ ERROR E0495
   |                  ^^ borrowed value does not live long enough
...
LL | }
   | - `y` dropped here while still borrowed
   |
   = note: borrowed value must be valid for the static lifetime...

error[E0597]: `y` does not live long enough
  --> $DIR/regions-nested-fns.rs:19:15
   |
LL |     ignore::<Box<for<'z> FnMut(&'z isize)>>(Box::new(|z| {
   |                                                       - has type `&'0 isize`
LL |         ay = x;
LL |         ay = &y;
   |               ^ `y` would have to be valid for `'0`
...
LL | }
   | - ...but `y` is only valid for the duration of the `nested` function, so it is dropped here while still borrowed
   |
   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments
   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>

error: unsatisfied lifetime constraints
  --> $DIR/regions-nested-fns.rs:23:68
   |
LL |   fn nested<'x>(x: &'x isize) {
   |             -- lifetime `'x` defined here
...
LL |       ignore::< Box<for<'z> FnMut(&'z isize) -> &'z isize>>(Box::new(|z| {
   |  ____________________________________________________________________^
LL | |         if false { return x; } //~ ERROR E0312
LL | |         if false { return ay; }
LL | |         return z;
LL | |     }));
   | |_____^ closure body requires that `'x` must outlive `'static`

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0597`.
