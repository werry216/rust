error: this function has too many arguments (8/7)
  --> $DIR/functions.rs:11:1
   |
11 | / fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {
12 | | }
   | |_^
   |
   = note: #[deny(too_many_arguments)] implied by #[deny(clippy)]
note: lint level defined here
  --> $DIR/functions.rs:4:9
   |
4  | #![deny(clippy)]
   |         ^^^^^^

error: this function has too many arguments (8/7)
  --> $DIR/functions.rs:19:5
   |
19 |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[deny(too_many_arguments)] implied by #[deny(clippy)]

error: this function has too many arguments (8/7)
  --> $DIR/functions.rs:28:5
   |
28 |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[deny(too_many_arguments)] implied by #[deny(clippy)]

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:37:34
   |
37 |         println!("{}", unsafe { *p });
   |                                  ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]
note: lint level defined here
  --> $DIR/functions.rs:4:9
   |
4  | #![deny(clippy)]
   |         ^^^^^^

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:38:35
   |
38 |         println!("{:?}", unsafe { p.as_ref() });
   |                                   ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:39:33
   |
39 |         unsafe { std::ptr::read(p) };
   |                                 ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:50:30
   |
50 |     println!("{}", unsafe { *p });
   |                              ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:51:31
   |
51 |     println!("{:?}", unsafe { p.as_ref() });
   |                               ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:52:29
   |
52 |     unsafe { std::ptr::read(p) };
   |                             ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:61:34
   |
61 |         println!("{}", unsafe { *p });
   |                                  ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:62:35
   |
62 |         println!("{:?}", unsafe { p.as_ref() });
   |                                   ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]

error: this public function dereferences a raw pointer but is not marked `unsafe`
  --> $DIR/functions.rs:63:33
   |
63 |         unsafe { std::ptr::read(p) };
   |                                 ^
   |
   = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]

error: aborting due to 12 previous errors

