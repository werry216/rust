error[E0080]: evaluation of constant value failed
  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   |
LL |         unsafe { intrinsics::ptr_offset_from(self, origin) }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                  |
   |                  ptr_offset_from cannot compute offset of pointers into different allocations.
   |                  inside `ptr::const_ptr::<impl *const Struct>::offset_from` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   | 
  ::: $DIR/offset_from_ub.rs:15:27
   |
LL |     let offset = unsafe { field_ptr.offset_from(base_ptr) };
   |                           ------------------------------- inside `DIFFERENT_ALLOC` at $DIR/offset_from_ub.rs:15:27

error: any use of this value will cause an error
  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   |
LL |           unsafe { intrinsics::ptr_offset_from(self, origin) }
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    unable to turn bytes into a pointer
   |                    inside `ptr::const_ptr::<impl *const u8>::offset_from` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   |                    inside `NOT_PTR` at $DIR/offset_from_ub.rs:21:14
   | 
  ::: $DIR/offset_from_ub.rs:19:1
   |
LL | / pub const NOT_PTR: usize = {
LL | |
LL | |     unsafe { (42 as *const u8).offset_from(&5u8) as usize }
LL | | };
   | |__-
   |
   = note: `#[deny(const_err)]` on by default
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>

error[E0080]: evaluation of constant value failed
  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   |
LL |         unsafe { intrinsics::ptr_offset_from(self, origin) }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                  |
   |                  exact_div: 1_isize cannot be divided by 2_isize without remainder
   |                  inside `ptr::const_ptr::<impl *const u16>::offset_from` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   | 
  ::: $DIR/offset_from_ub.rs:28:14
   |
LL |     unsafe { field_ptr.offset_from(base_ptr as *const u16) }
   |              --------------------------------------------- inside `NOT_MULTIPLE_OF_SIZE` at $DIR/offset_from_ub.rs:28:14

error[E0080]: evaluation of constant value failed
  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   |
LL |         unsafe { intrinsics::ptr_offset_from(self, origin) }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                  |
   |                  null pointer is not a valid pointer for this operation
   |                  inside `ptr::const_ptr::<impl *const u8>::offset_from` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   | 
  ::: $DIR/offset_from_ub.rs:33:14
   |
LL |     unsafe { ptr.offset_from(ptr) }
   |              -------------------- inside `OFFSET_FROM_NULL` at $DIR/offset_from_ub.rs:33:14

error: any use of this value will cause an error
  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   |
LL |           unsafe { intrinsics::ptr_offset_from(self, origin) }
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    unable to turn bytes into a pointer
   |                    inside `ptr::const_ptr::<impl *const u8>::offset_from` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL
   |                    inside `DIFFERENT_INT` at $DIR/offset_from_ub.rs:40:14
   | 
  ::: $DIR/offset_from_ub.rs:36:1
   |
LL | / pub const DIFFERENT_INT: isize = { // offset_from with two different integers: like DIFFERENT_ALLOC
LL | |
LL | |     let ptr1 = 8 as *const u8;
LL | |     let ptr2 = 16 as *const u8;
LL | |     unsafe { ptr2.offset_from(ptr1) }
LL | | };
   | |__-
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>

error: aborting due to 5 previous errors

For more information about this error, try `rustc --explain E0080`.
