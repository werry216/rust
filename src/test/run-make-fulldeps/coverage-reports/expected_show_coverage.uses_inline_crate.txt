    1|       |#![allow(unused_assignments, unused_variables)]
    2|       |
    3|       |// compile-flags: -C opt-level=3 # validates coverage now works with optimizations
    4|       |
    5|       |use std::fmt::Debug;
    6|       |
    7|      1|pub fn used_function() {
    8|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure
    9|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from
   10|       |    // dependent conditions.
   11|      1|    let is_true = std::env::args().len() == 1;
   12|      1|    let mut countdown = 0;
   13|      1|    if is_true {
   14|      1|        countdown = 10;
   15|      1|    }
                   ^0
   16|      1|    use_this_lib_crate();
   17|      1|}
   18|       |
   19|       |#[inline(always)]
   20|      1|pub fn used_inline_function() {
   21|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure
   22|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from
   23|       |    // dependent conditions.
   24|      1|    let is_true = std::env::args().len() == 1;
   25|      1|    let mut countdown = 0;
   26|      1|    if is_true {
   27|      1|        countdown = 10;
   28|      1|    }
                   ^0
   29|      1|    use_this_lib_crate();
   30|      1|}
   31|       |
   32|       |#[inline(always)]
   33|      2|pub fn used_only_from_bin_crate_generic_function<T: Debug>(arg: T) {
   34|      2|    println!("used_only_from_bin_crate_generic_function with {:?}", arg);
   35|      2|}
  ------------------
  | used_inline_crate::used_only_from_bin_crate_generic_function::<&alloc::vec::Vec<i32>>:
  |   33|      1|pub fn used_only_from_bin_crate_generic_function<T: Debug>(arg: T) {
  |   34|      1|    println!("used_only_from_bin_crate_generic_function with {:?}", arg);
  |   35|      1|}
  ------------------
  | used_inline_crate::used_only_from_bin_crate_generic_function::<&str>:
  |   33|      1|pub fn used_only_from_bin_crate_generic_function<T: Debug>(arg: T) {
  |   34|      1|    println!("used_only_from_bin_crate_generic_function with {:?}", arg);
  |   35|      1|}
  ------------------
  | Unexecuted instantiation: used_inline_crate::used_only_from_bin_crate_generic_function::<_>
  ------------------
   36|       |// Expect for above function: `Unexecuted instantiation` (see notes in `used_crate.rs`)
   37|       |
   38|       |#[inline(always)]
   39|      4|pub fn used_only_from_this_lib_crate_generic_function<T: Debug>(arg: T) {
   40|      4|    println!("used_only_from_this_lib_crate_generic_function with {:?}", arg);
   41|      4|}
  ------------------
  | used_inline_crate::used_only_from_this_lib_crate_generic_function::<alloc::vec::Vec<i32>>:
  |   39|      2|pub fn used_only_from_this_lib_crate_generic_function<T: Debug>(arg: T) {
  |   40|      2|    println!("used_only_from_this_lib_crate_generic_function with {:?}", arg);
  |   41|      2|}
  ------------------
  | used_inline_crate::used_only_from_this_lib_crate_generic_function::<&str>:
  |   39|      2|pub fn used_only_from_this_lib_crate_generic_function<T: Debug>(arg: T) {
  |   40|      2|    println!("used_only_from_this_lib_crate_generic_function with {:?}", arg);
  |   41|      2|}
  ------------------
   42|       |
   43|       |#[inline(always)]
   44|      3|pub fn used_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {
   45|      3|    println!("used_from_bin_crate_and_lib_crate_generic_function with {:?}", arg);
   46|      3|}
  ------------------
  | used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::<alloc::vec::Vec<i32>>:
  |   44|      1|pub fn used_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {
  |   45|      1|    println!("used_from_bin_crate_and_lib_crate_generic_function with {:?}", arg);
  |   46|      1|}
  ------------------
  | used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::<&str>:
  |   44|      2|pub fn used_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {
  |   45|      2|    println!("used_from_bin_crate_and_lib_crate_generic_function with {:?}", arg);
  |   46|      2|}
  ------------------
   47|       |
   48|       |#[inline(always)]
   49|      3|pub fn used_with_same_type_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {
   50|      3|    println!("used_with_same_type_from_bin_crate_and_lib_crate_generic_function with {:?}", arg);
   51|      3|}
  ------------------
  | used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::<&str>:
  |   49|      1|pub fn used_with_same_type_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {
  |   50|      1|    println!("used_with_same_type_from_bin_crate_and_lib_crate_generic_function with {:?}", arg);
  |   51|      1|}
  ------------------
  | used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::<&str>:
  |   49|      2|pub fn used_with_same_type_from_bin_crate_and_lib_crate_generic_function<T: Debug>(arg: T) {
  |   50|      2|    println!("used_with_same_type_from_bin_crate_and_lib_crate_generic_function with {:?}", arg);
  |   51|      2|}
  ------------------
   52|       |
   53|       |#[inline(always)]
   54|      0|pub fn unused_generic_function<T: Debug>(arg: T) {
   55|      0|    println!("unused_generic_function with {:?}", arg);
   56|      0|}
   57|       |
   58|       |#[inline(always)]
   59|      0|pub fn unused_function() {
   60|      0|    let is_true = std::env::args().len() == 1;
   61|      0|    let mut countdown = 2;
   62|      0|    if !is_true {
   63|      0|        countdown = 20;
   64|      0|    }
   65|      0|}
   66|       |
   67|       |#[inline(always)]
   68|      0|fn unused_private_function() {
   69|      0|    let is_true = std::env::args().len() == 1;
   70|      0|    let mut countdown = 2;
   71|      0|    if !is_true {
   72|      0|        countdown = 20;
   73|      0|    }
   74|      0|}
   75|       |
   76|      2|fn use_this_lib_crate() {
   77|      2|    used_from_bin_crate_and_lib_crate_generic_function("used from library used_crate.rs");
   78|      2|    used_with_same_type_from_bin_crate_and_lib_crate_generic_function(
   79|      2|        "used from library used_crate.rs",
   80|      2|    );
   81|      2|    let some_vec = vec![5, 6, 7, 8];
   82|      2|    used_only_from_this_lib_crate_generic_function(some_vec);
   83|      2|    used_only_from_this_lib_crate_generic_function("used ONLY from library used_crate.rs");
   84|      2|}

