warning: equal expressions as operands to `/`
 --> $DIR/zero_div_zero.rs:7:15
  |
7 |     let nan = 0.0 / 0.0;
  |               ^^^^^^^^^
  |
  = note: #[warn(eq_op)] on by default

error: constant division of 0.0 with 0.0 will always result in NaN
 --> $DIR/zero_div_zero.rs:7:15
  |
7 |     let nan = 0.0 / 0.0;
  |               ^^^^^^^^^
  |
note: lint level defined here
 --> $DIR/zero_div_zero.rs:5:8
  |
5 | #[deny(zero_divided_by_zero)]
  |        ^^^^^^^^^^^^^^^^^^^^
  = help: Consider using `std::f32::NAN` if you would like a constant representing NaN

warning: equal expressions as operands to `/`
 --> $DIR/zero_div_zero.rs:9:19
  |
9 |     let f64_nan = 0.0 / 0.0f64;
  |                   ^^^^^^^^^^^^
  |
  = note: #[warn(eq_op)] on by default

error: constant division of 0.0 with 0.0 will always result in NaN
 --> $DIR/zero_div_zero.rs:9:19
  |
9 |     let f64_nan = 0.0 / 0.0f64;
  |                   ^^^^^^^^^^^^
  |
  = help: Consider using `std::f64::NAN` if you would like a constant representing NaN

warning: equal expressions as operands to `/`
  --> $DIR/zero_div_zero.rs:11:25
   |
11 |     let other_f64_nan = 0.0f64 / 0.0;
   |                         ^^^^^^^^^^^^
   |
   = note: #[warn(eq_op)] on by default

error: constant division of 0.0 with 0.0 will always result in NaN
  --> $DIR/zero_div_zero.rs:11:25
   |
11 |     let other_f64_nan = 0.0f64 / 0.0;
   |                         ^^^^^^^^^^^^
   |
   = help: Consider using `std::f64::NAN` if you would like a constant representing NaN

warning: equal expressions as operands to `/`
  --> $DIR/zero_div_zero.rs:13:28
   |
13 |     let one_more_f64_nan = 0.0f64/0.0f64;
   |                            ^^^^^^^^^^^^^
   |
   = note: #[warn(eq_op)] on by default

error: constant division of 0.0 with 0.0 will always result in NaN
  --> $DIR/zero_div_zero.rs:13:28
   |
13 |     let one_more_f64_nan = 0.0f64/0.0f64;
   |                            ^^^^^^^^^^^^^
   |
   = help: Consider using `std::f64::NAN` if you would like a constant representing NaN

error: aborting due to 4 previous errors

