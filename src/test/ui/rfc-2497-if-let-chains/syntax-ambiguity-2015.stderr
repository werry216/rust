warning: ambigious use of `&&`
  --> $DIR/syntax-ambiguity-2015.rs:22:47
   |
LL |     if let Range { start: _, end: _ } = true..true && false { }
   |                                               ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true && false)`
   |
   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.

warning: ambigious use of `||`
  --> $DIR/syntax-ambiguity-2015.rs:25:47
   |
LL |     if let Range { start: _, end: _ } = true..true || false { }
   |                                               ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true || false)`
   |
   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.

warning: ambigious use of `&&`
  --> $DIR/syntax-ambiguity-2015.rs:28:50
   |
LL |     while let Range { start: _, end: _ } = true..true && false { }
   |                                                  ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true && false)`
   |
   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.

warning: ambigious use of `||`
  --> $DIR/syntax-ambiguity-2015.rs:31:50
   |
LL |     while let Range { start: _, end: _ } = true..true || false { }
   |                                                  ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true || false)`
   |
   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.

warning: ambigious use of `&&`
  --> $DIR/syntax-ambiguity-2015.rs:34:19
   |
LL |     if let true = false && false { }
   |                   ^^^^^^^^^^^^^^ help: consider adding parenthesis: `(false && false)`
   |
   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.

warning: ambigious use of `&&`
  --> $DIR/syntax-ambiguity-2015.rs:37:22
   |
LL |     while let true = (1 == 2) && false { }
   |                      ^^^^^^^^^^^^^^^^^ help: consider adding parenthesis: `((1 == 2) && false)`
   |
   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.

