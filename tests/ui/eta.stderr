error: redundant closure found
  --> $DIR/eta.rs:32:27
   |
LL |     let a = Some(1u8).map(|a| foo(a));
   |                           ^^^^^^^^^^ help: remove closure as shown: `foo`
   |
   = note: `-D clippy::redundant-closure` implied by `-D warnings`

error: redundant closure found
  --> $DIR/eta.rs:33:10
   |
LL |     meta(|a| foo(a));
   |          ^^^^^^^^^^ help: remove closure as shown: `foo`

error: redundant closure found
  --> $DIR/eta.rs:37:40
   |
LL |     let _: Option<Vec<u8>> = true.then(|| vec![]); // special case vec!
   |                                        ^^^^^^^^^ help: remove closure as shown: `std::vec::Vec::new`

error: this expression borrows a reference (`&u8`) that is immediately dereferenced by the compiler
  --> $DIR/eta.rs:39:21
   |
LL |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted
   |                     ^^^ help: change this to: `&2`
   |
   = note: `-D clippy::needless-borrow` implied by `-D warnings`

error: redundant closure found
  --> $DIR/eta.rs:46:27
   |
LL |     let e = Some(1u8).map(|a| generic(a));
   |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `generic`

error: redundant closure found
  --> $DIR/eta.rs:89:51
   |
LL |     let e = Some(TestStruct { some_ref: &i }).map(|a| a.foo());
   |                                                   ^^^^^^^^^^^ help: remove closure as shown: `TestStruct::foo`
   |
   = note: `-D clippy::redundant-closure-for-method-calls` implied by `-D warnings`

error: redundant closure found
  --> $DIR/eta.rs:91:51
   |
LL |     let e = Some(TestStruct { some_ref: &i }).map(|a| a.trait_foo());
   |                                                   ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `TestTrait::trait_foo`

error: redundant closure found
  --> $DIR/eta.rs:94:42
   |
LL |     let e = Some(&mut vec![1, 2, 3]).map(|v| v.clear());
   |                                          ^^^^^^^^^^^^^ help: remove closure as shown: `std::vec::Vec::clear`

error: redundant closure found
  --> $DIR/eta.rs:99:29
   |
LL |     let e = Some("str").map(|s| s.to_string());
   |                             ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `std::string::ToString::to_string`

error: redundant closure found
  --> $DIR/eta.rs:101:27
   |
LL |     let e = Some('a').map(|s| s.to_uppercase());
   |                           ^^^^^^^^^^^^^^^^^^^^ help: remove closure as shown: `char::to_uppercase`

error: redundant closure found
  --> $DIR/eta.rs:104:65
   |
LL |     let e: std::vec::Vec<char> = vec!['a', 'b', 'c'].iter().map(|c| c.to_ascii_uppercase()).collect();
   |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove closure as shown: `char::to_ascii_uppercase`

error: redundant closure found
  --> $DIR/eta.rs:187:27
   |
LL |     let a = Some(1u8).map(|a| foo_ptr(a));
   |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `foo_ptr`

error: redundant closure found
  --> $DIR/eta.rs:192:27
   |
LL |     let a = Some(1u8).map(|a| closure(a));
   |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `closure`

error: aborting due to 13 previous errors

