From fd6acae580c2be9e8ba9c32b013df4e9547d936f Mon Sep 17 00:00:00 2001
From: bjorn3 <bjorn3@users.noreply.github.com>
Date: Mon, 12 Nov 2018 19:08:45 +0100
Subject: [PATCH] Disable stdsimd

---
 src/libcore/lib.rs | 2 ++
 src/libstd/lib.rs  | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/src/libcore/lib.rs b/src/libcore/lib.rs
index c69d444..1b7abad 100644
--- a/src/libcore/lib.rs
+++ b/src/libcore/lib.rs
@@ -228,6 +228,7 @@ mod nonzero;
 mod tuple;
 mod unit;
 
+/*
 // Pull in the `coresimd` crate directly into libcore. This is where all the
 // architecture-specific (and vendor-specific) intrinsics are defined. AKA
 // things like SIMD and such. Note that the actual source for all this lies in a
@@ -256,3 +257,4 @@ mod coresimd;
 #[stable(feature = "simd_arch", since = "1.27.0")]
 #[cfg(not(stage0))]
 pub use coresimd::arch;
+*/
diff --git a/src/libstd/lib.rs b/src/libstd/lib.rs
index f460d10..6110b05 100644
--- a/src/libstd/lib.rs
+++ b/src/libstd/lib.rs
@@ -493,6 +493,7 @@ mod memchr;
 // compiler
 pub mod rt;
 
+/*
 // Pull in the `stdsimd` crate directly into libstd. This is the same as
 // libcore's arch/simd modules where the source of truth here is in a different
 // repository, but we pull things in here manually to get it into libstd.
@@ -517,6 +518,7 @@ mod coresimd {
 #[stable(feature = "simd_arch", since = "1.27.0")]
 #[cfg(all(not(stage0), not(test)))]
 pub use stdsimd::arch;
+*/
 
 // Include a number of private modules that exist solely to provide
 // the rustdoc documentation for primitive types. Using `include!`
-- 
2.11.0

