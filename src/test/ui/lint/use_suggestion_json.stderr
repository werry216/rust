{
  "message": "cannot find type `Iter` in this scope",
  "code": {
    "code": "E0412",
    "explanation": null
  },
  "level": "error",
  "spans": [
    {
      "file_name": "$DIR/use_suggestion_json.rs",
      "byte_start": 907,
      "byte_end": 911,
      "line_start": 21,
      "line_end": 21,
      "column_start": 12,
      "column_end": 16,
      "is_primary": true,
      "text": [
        {
          "text": "    let x: Iter;",
          "highlight_start": 12,
          "highlight_end": 16
        }
      ],
      "label": "not found in this scope",
      "suggested_replacement": null,
      "expansion": null
    }
  ],
  "children": [
    {
      "message": "possible candidates are found in other modules, you can import them into scope",
      "code": null,
      "level": "help",
      "spans": [
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::collections::binary_heap::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::collections::btree_map::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::collections::btree_set::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::collections::hash_map::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::collections::hash_set::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::collections::linked_list::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::collections::vec_deque::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::option::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::path::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::result::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::slice::Iter;

",
          "expansion": null
        },
        {
          "file_name": "$DIR/use_suggestion_json.rs",
          "byte_start": 884,
          "byte_end": 884,
          "line_start": 20,
          "line_end": 20,
          "column_start": 1,
          "column_end": 1,
          "is_primary": true,
          "text": [
            {
              "text": "fn main() {",
              "highlight_start": 1,
              "highlight_end": 1
            }
          ],
          "label": null,
          "suggested_replacement": "use std::sync::mpsc::Iter;

",
          "expansion": null
        }
      ],
      "children": [],
      "rendered": null
    }
  ],
  "rendered": "error[E0412]: cannot find type `Iter` in this scope
  --> $DIR/use_suggestion_json.rs:21:12
   |
21 |     let x: Iter;
   |            ^^^^ not found in this scope
help: possible candidates are found in other modules, you can import them into scope
   |
20 | use std::collections::binary_heap::Iter;
   |
20 | use std::collections::btree_map::Iter;
   |
20 | use std::collections::btree_set::Iter;
   |
20 | use std::collections::hash_map::Iter;
   |
and 8 other candidates

"
}
{
  "message": "aborting due to previous error",
  "code": null,
  "level": "error",
  "spans": [],
  "children": [],
  "rendered": "error: aborting due to previous error

"
}
