warning: the feature `capture_disjoint_fields` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/mut_ref.rs:4:12
   |
LL | #![feature(capture_disjoint_fields)]
   |            ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(incomplete_features)]` on by default
   = note: see issue #53488 <https://github.com/rust-lang/rust/issues/53488> for more information

error[E0594]: cannot assign to `ref_mref_x`, as it is not declared as mutable
  --> $DIR/mut_ref.rs:15:9
   |
LL |     let ref_mref_x = &mref_x;
   |         ---------- help: consider changing this to be mutable: `mut ref_mref_x`
...
LL |         **ref_mref_x = y;
   |         ^^^^^^^^^^^^ cannot assign

error[E0596]: cannot borrow `**ref_mref_x` as mutable, as it is behind a `&` reference
  --> $DIR/mut_ref.rs:13:13
   |
LL |     let ref_mref_x = &mref_x;
   |                      ------- help: consider changing this to be a mutable reference: `&mut mref_x`
LL | 
LL |     let c = || {
   |             ^^ `ref_mref_x` is a `&` reference, so the data it refers to cannot be borrowed as mutable
LL |
LL |         **ref_mref_x = y;
   |           ---------- mutable borrow occurs due to use of `**ref_mref_x` in closure

error[E0594]: cannot assign to `mref_ref_x`, as it is not declared as mutable
  --> $DIR/mut_ref.rs:30:9
   |
LL |     let mref_ref_x = &mut ref_x;
   |         ---------- help: consider changing this to be mutable: `mut mref_ref_x`
...
LL |         **mref_ref_x = y;
   |         ^^^^^^^^^^^^ cannot assign

error[E0596]: cannot borrow `**mref_ref_x` as mutable, as it is behind a `&` reference
  --> $DIR/mut_ref.rs:28:13
   |
LL |     let c = || {
   |             ^^ cannot borrow as mutable
LL |
LL |         **mref_ref_x = y;
   |           ---------- mutable borrow occurs due to use of `**mref_ref_x` in closure

error: aborting due to 4 previous errors; 1 warning emitted

Some errors have detailed explanations: E0594, E0596.
For more information about an error, try `rustc --explain E0594`.
