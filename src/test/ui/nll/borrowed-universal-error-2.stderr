error[E0597]: `v` does not live long enough
  --> $DIR/borrowed-universal-error-2.rs:16:5
   |
LL | fn foo<'a>(x: &'a (u32,)) -> &'a u32 {
   |               ----------     ------- has type `&'a u32`
   |               |
   |               has type `&'a (u32,)`
LL |     let v = 22;
LL |     &v
   |     ^^ `v` would have to be valid for `'a`
LL |     //~^ ERROR `v` does not live long enough [E0597]
LL | }
   | - ...but `v` is only valid for the duration of the `foo` function, so it is dropped here while still borrowed
   |
   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments
   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>

error: aborting due to previous error

For more information about this error, try `rustc --explain E0597`.
