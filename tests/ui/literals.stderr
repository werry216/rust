error: inconsistent casing in hexadecimal literal
  --> $DIR/literals.rs:12:17
   |
12 |     let fail1 = 0xabCD;
   |                 ^^^^^^
   |
   = note: `-D mixed-case-hex-literals` implied by `-D warnings`

error: inconsistent casing in hexadecimal literal
  --> $DIR/literals.rs:13:17
   |
13 |     let fail2 = 0xabCD_u32;
   |                 ^^^^^^^^^^

error: inconsistent casing in hexadecimal literal
  --> $DIR/literals.rs:14:17
   |
14 |     let fail2 = 0xabCD_isize;
   |                 ^^^^^^^^^^^^

error: integer type suffix should be separated by an underscore
  --> $DIR/literals.rs:15:27
   |
15 |     let fail_multi_zero = 000_123usize;
   |                           ^^^^^^^^^^^^
   |
   = note: `-D unseparated-literal-suffix` implied by `-D warnings`

error: this is a decimal constant
  --> $DIR/literals.rs:15:27
   |
15 |     let fail_multi_zero = 000_123usize;
   |                           ^^^^^^^^^^^^
   |
   = note: `-D zero-prefixed-literal` implied by `-D warnings`
help: if you mean to use a decimal constant, remove the `0` to remove confusion
   |
15 |     let fail_multi_zero = 123usize;
   |                           ^^^^^^^^
help: if you mean to use an octal constant, use `0o`
   |
15 |     let fail_multi_zero = 0o123usize;
   |                           ^^^^^^^^^^

error: integer type suffix should be separated by an underscore
  --> $DIR/literals.rs:20:17
   |
20 |     let fail3 = 1234i32;
   |                 ^^^^^^^

error: integer type suffix should be separated by an underscore
  --> $DIR/literals.rs:21:17
   |
21 |     let fail4 = 1234u32;
   |                 ^^^^^^^

error: integer type suffix should be separated by an underscore
  --> $DIR/literals.rs:22:17
   |
22 |     let fail5 = 1234isize;
   |                 ^^^^^^^^^

error: integer type suffix should be separated by an underscore
  --> $DIR/literals.rs:23:17
   |
23 |     let fail6 = 1234usize;
   |                 ^^^^^^^^^

error: float type suffix should be separated by an underscore
  --> $DIR/literals.rs:24:17
   |
24 |     let fail7 = 1.5f32;
   |                 ^^^^^^

error: this is a decimal constant
  --> $DIR/literals.rs:28:17
   |
28 |     let fail8 = 0123;
   |                 ^^^^
help: if you mean to use a decimal constant, remove the `0` to remove confusion
   |
28 |     let fail8 = 123;
   |                 ^^^
help: if you mean to use an octal constant, use `0o`
   |
28 |     let fail8 = 0o123;
   |                 ^^^^^

error: long literal lacking separators
  --> $DIR/literals.rs:39:17
   |
39 |     let fail9 = 0xabcdef;
   |                 ^^^^^^^^ help: consider: `0x00ab_cdef`
   |
   = note: `-D unreadable-literal` implied by `-D warnings`

error: long literal lacking separators
  --> $DIR/literals.rs:40:18
   |
40 |     let fail10 = 0xBAFEBAFE;
   |                  ^^^^^^^^^^ help: consider: `0xBAFE_BAFE`

error: long literal lacking separators
  --> $DIR/literals.rs:41:18
   |
41 |     let fail11 = 0xabcdeff;
   |                  ^^^^^^^^^ help: consider: `0x0abc_deff`

error: long literal lacking separators
  --> $DIR/literals.rs:42:18
   |
42 |     let fail12 = 0xabcabcabcabcabcabc;
   |                  ^^^^^^^^^^^^^^^^^^^^ help: consider: `0x00ab_cabc_abca_bcab_cabc`

error: digit groups should be smaller
  --> $DIR/literals.rs:43:18
   |
43 |     let fail13 = 0x1_23456_78901_usize;
   |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`
   |
   = note: `-D large-digit-groups` implied by `-D warnings`

error: aborting due to 16 previous errors

