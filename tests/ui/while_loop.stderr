error: this loop could be written as a `while let` loop
  --> $DIR/while_loop.rs:15:5
   |
LL | /     loop {
LL | |         if let Some(_x) = y {
LL | |             let _v = 1;
LL | |         } else {
LL | |             break;
LL | |         }
LL | |     }
   | |_____^ help: try: `while let Some(_x) = y { .. }`
   |
   = note: `-D clippy::while-let-loop` implied by `-D warnings`

error: this loop could be written as a `while let` loop
  --> $DIR/while_loop.rs:29:5
   |
LL | /     loop {
LL | |         match y {
LL | |             Some(_x) => true,
LL | |             None => break,
LL | |         };
LL | |     }
   | |_____^ help: try: `while let Some(_x) = y { .. }`

error: this loop could be written as a `while let` loop
  --> $DIR/while_loop.rs:35:5
   |
LL | /     loop {
LL | |         let x = match y {
LL | |             Some(x) => x,
LL | |             None => break,
...  |
LL | |         let _str = "foo";
LL | |     }
   | |_____^ help: try: `while let Some(x) = y { .. }`

error: this loop could be written as a `while let` loop
  --> $DIR/while_loop.rs:43:5
   |
LL | /     loop {
LL | |         let x = match y {
LL | |             Some(x) => x,
LL | |             None => break,
...  |
LL | |         }
LL | |     }
   | |_____^ help: try: `while let Some(x) = y { .. }`

error: this loop could be written as a `while let` loop
  --> $DIR/while_loop.rs:71:5
   |
LL | /     loop {
LL | |         let (e, l) = match "".split_whitespace().next() {
LL | |             Some(word) => (word.is_empty(), word.len()),
LL | |             None => break,
...  |
LL | |         let _ = (e, l);
LL | |     }
   | |_____^ help: try: `while let Some(word) = "".split_whitespace().next() { .. }`

error: this loop could be written as a `for` loop
  --> $DIR/while_loop.rs:81:33
   |
LL |     while let Option::Some(x) = iter.next() {
   |                                 ^^^^^^^^^^^ help: try: `for x in iter { .. }`
   |
   = note: `-D clippy::while-let-on-iterator` implied by `-D warnings`

error: this loop could be written as a `for` loop
  --> $DIR/while_loop.rs:86:25
   |
LL |     while let Some(x) = iter.next() {
   |                         ^^^^^^^^^^^ help: try: `for x in iter { .. }`

error: this loop could be written as a `for` loop
  --> $DIR/while_loop.rs:91:25
   |
LL |     while let Some(_) = iter.next() {}
   |                         ^^^^^^^^^^^ help: try: `for _ in iter { .. }`

error: this loop could be written as a `while let` loop
  --> $DIR/while_loop.rs:134:5
   |
LL | /     loop {
LL | |         let _ = match iter.next() {
LL | |             Some(ele) => ele,
LL | |             None => break,
LL | |         };
LL | |         loop {}
LL | |     }
   | |_____^ help: try: `while let Some(ele) = iter.next() { .. }`

error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.
  --> $DIR/while_loop.rs:139:9
   |
LL |         loop {}
   |         ^^^^^^^
   |
   = note: `-D clippy::empty-loop` implied by `-D warnings`

error: this loop could be written as a `for` loop
  --> $DIR/while_loop.rs:197:29
   |
LL |         while let Some(v) = y.next() {
   |                             ^^^^^^^^ help: try: `for v in y { .. }`

error: this loop could be written as a `for` loop
  --> $DIR/while_loop.rs:225:26
   |
LL |     while let Some(..) = values.iter().next() {
   |                          ^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in values.iter() { .. }`

error: aborting due to 12 previous errors

