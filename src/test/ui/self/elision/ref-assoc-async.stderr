error[E0106]: missing lifetime specifier
  --> $DIR/ref-assoc-async.rs:21:77
   |
LL |     async fn ref_AssocType(self: &<Struct as Trait>::AssocType, f: &u32) -> &u32 {
   |                                                                             ^
   |
   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.

error[E0106]: missing lifetime specifier
  --> $DIR/ref-assoc-async.rs:27:86
   |
LL |     async fn box_ref_AssocType(self: Box<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 {
   |                                                                                      ^
   |
   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.

error[E0106]: missing lifetime specifier
  --> $DIR/ref-assoc-async.rs:33:86
   |
LL |     async fn pin_ref_AssocType(self: Pin<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 {
   |                                                                                      ^
   |
   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.

error[E0106]: missing lifetime specifier
  --> $DIR/ref-assoc-async.rs:39:95
   |
LL |     async fn box_box_ref_AssocType(self: Box<Box<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {
   |                                                                                               ^
   |
   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.

error[E0106]: missing lifetime specifier
  --> $DIR/ref-assoc-async.rs:45:95
   |
LL |     async fn box_pin_ref_AssocType(self: Box<Pin<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {
   |                                                                                               ^
   |
   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.

error: cannot infer an appropriate lifetime
  --> $DIR/ref-assoc-async.rs:21:65
   |
LL |     async fn ref_AssocType(self: &<Struct as Trait>::AssocType, f: &u32) -> &u32 {
   |                                                                 ^           ---- this return type evaluates to the `'static` lifetime...
   |                                                                 |
   |                                                                 ...but this borrow...
   |
note: ...can't outlive the lifetime '_ as defined on the method body at 21:34
  --> $DIR/ref-assoc-async.rs:21:34
   |
LL |     async fn ref_AssocType(self: &<Struct as Trait>::AssocType, f: &u32) -> &u32 {
   |                                  ^
help: you can add a constraint to the return type to make it last less than `'static` and match the lifetime '_ as defined on the method body at 21:34
   |
LL |     async fn ref_AssocType(self: &<Struct as Trait>::AssocType, f: &u32) -> &u32 + '_ {
   |                                                                             ^^^^^^^^^

error: cannot infer an appropriate lifetime
  --> $DIR/ref-assoc-async.rs:27:74
   |
LL |     async fn box_ref_AssocType(self: Box<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 {
   |                                                                          ^           ---- this return type evaluates to the `'static` lifetime...
   |                                                                          |
   |                                                                          ...but this borrow...
   |
note: ...can't outlive the lifetime '_ as defined on the method body at 27:42
  --> $DIR/ref-assoc-async.rs:27:42
   |
LL |     async fn box_ref_AssocType(self: Box<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 {
   |                                          ^
help: you can add a constraint to the return type to make it last less than `'static` and match the lifetime '_ as defined on the method body at 27:42
   |
LL |     async fn box_ref_AssocType(self: Box<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 + '_ {
   |                                                                                      ^^^^^^^^^

error: cannot infer an appropriate lifetime
  --> $DIR/ref-assoc-async.rs:33:74
   |
LL |     async fn pin_ref_AssocType(self: Pin<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 {
   |                                                                          ^           ---- this return type evaluates to the `'static` lifetime...
   |                                                                          |
   |                                                                          ...but this borrow...
   |
note: ...can't outlive the lifetime '_ as defined on the method body at 33:42
  --> $DIR/ref-assoc-async.rs:33:42
   |
LL |     async fn pin_ref_AssocType(self: Pin<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 {
   |                                          ^
help: you can add a constraint to the return type to make it last less than `'static` and match the lifetime '_ as defined on the method body at 33:42
   |
LL |     async fn pin_ref_AssocType(self: Pin<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 + '_ {
   |                                                                                      ^^^^^^^^^

error: cannot infer an appropriate lifetime
  --> $DIR/ref-assoc-async.rs:39:83
   |
LL |     async fn box_box_ref_AssocType(self: Box<Box<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {
   |                                                                                   ^           ---- this return type evaluates to the `'static` lifetime...
   |                                                                                   |
   |                                                                                   ...but this borrow...
   |
note: ...can't outlive the lifetime '_ as defined on the method body at 39:50
  --> $DIR/ref-assoc-async.rs:39:50
   |
LL |     async fn box_box_ref_AssocType(self: Box<Box<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {
   |                                                  ^
help: you can add a constraint to the return type to make it last less than `'static` and match the lifetime '_ as defined on the method body at 39:50
   |
LL |     async fn box_box_ref_AssocType(self: Box<Box<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 + '_ {
   |                                                                                               ^^^^^^^^^

error: cannot infer an appropriate lifetime
  --> $DIR/ref-assoc-async.rs:45:83
   |
LL |     async fn box_pin_ref_AssocType(self: Box<Pin<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {
   |                                                                                   ^           ---- this return type evaluates to the `'static` lifetime...
   |                                                                                   |
   |                                                                                   ...but this borrow...
   |
note: ...can't outlive the lifetime '_ as defined on the method body at 45:50
  --> $DIR/ref-assoc-async.rs:45:50
   |
LL |     async fn box_pin_ref_AssocType(self: Box<Pin<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {
   |                                                  ^
help: you can add a constraint to the return type to make it last less than `'static` and match the lifetime '_ as defined on the method body at 45:50
   |
LL |     async fn box_pin_ref_AssocType(self: Box<Pin<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 + '_ {
   |                                                                                               ^^^^^^^^^

error: aborting due to 10 previous errors

For more information about this error, try `rustc --explain E0106`.
